C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE SERVICEGEN
OBJECT MODULE PLACED IN .\servicegen.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\BLE Service\servicegen.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INTVECTOR
                    -(0X0300) INCDIR(..\include;..\BLE Service) DEBUG OBJECTEXTEND PRINT(.\servicegen.lst) TABS(2) OBJECT(.\servicegen.obj)

line level    source

   1          /*****************************************************************************
   2          **               AMICCOM Electronics Corporation Document                   **
   3          **          Copyright (c) 2011-2014 AMICCOM Electronics Corporation         **
   4          **                                                                          **
   5          **      A3,1F,No.1, Li-Hsin 1th Road, Science_Based Industrid Park,         **
   6          **                       Hsin_Chu City, 300, Taiwan, ROC.                   **
   7          **                 Tel: 886-3-5785818   Fax: 886-3-5785819                  **
   8          **         E-mail:info@amiccom.com.tw  http: //www.amiccom.com.tw           **
   9          *****************************************************************************/
  10          #define _SERVICEGEN_C_
  11          
  12          #include "define.h"
  13          #include "servicegen.h"
  14          
  15          #ifdef _PROFILE_WECHAT_
              const uint8_t code ADV_DATA_INITIAL[32] =
              {
                  0x11,  //User Define ADV Data Length
              
                  0x02, 0x01, 0x05, 0x03, 0x02, 0xE7, 0xFE, 0x09,
                  0xFF, 0x0D, 0x00, 0xD0, 0x39, 0x72, 0xA5, 0xEF,
                  0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
              };
              
              const uint8_t code SCAN_RESPONSE_DATA_INITIAL[32] =
              {
                  0x0D,  //User Define Scan response Data Length
              
                  0x0C, 0x09, 0x41, 0x4D, 0x49, 0x43, 0x43, 0x4F,
                  0x4D, 0x2D, 0x42, 0x4C, 0x45, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
              };
              #elif defined _PROFILE_TAOBAO_
              const uint8_t code ADV_DATA_INITIAL[32] =
              {
                  0x18,  //User Define ADV Data Length
              
                  0x02, 0x01, 0x06, 0x07, 0x03, 0xE7, 0xFE, 0x18,
                  0xD6, 0xB3, 0xFE, 0x0C, 0xFF, 0xA8, 0x01, 0x01,
                  0x00, 0x01, 0xE9, 0xEF, 0x24, 0x74, 0x96, 0x07,
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
              };
              
              const uint8_t code SCAN_RESPONSE_DATA_INITIAL[32] =
              {
                  0x0A,  //User Define Scan response Data Length
              
                  0x09, 0x09, 0x4C, 0x53, 0x5F, 0x53, 0x43, 0x41,
                  0x31, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
              };
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 2   

              #elif defined _PROFILE_HOGP_
              const uint8_t code ADV_DATA_INITIAL[32] =
              {
                  0x0B,  //User Define ADV Data Length
              
                  0x02, 0x01, 0x05, 0x03, 0x02, 0x12, 0x18, 0x03,
                  0x19, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
              };
              
              const uint8_t code SCAN_RESPONSE_DATA_INITIAL[32] =
              {
                  0x12,  //User Define Scan response Data Length
              
                  0x11, 0x09, 0x41, 0x4D, 0x49, 0x43, 0x43, 0x4F,
                  0x4D, 0x5F, 0x48, 0x49, 0x44, 0x5F, 0x44, 0x65,
                  0x6D, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
              };
              #else
  76          const uint8_t code ADV_DATA_INITIAL[32] =
  77          {
  78              0x0B,  //User Define ADV Data Length
  79          
  80              0x02, 0x01, 0x05, 0x03, 0x02, 0xF0, 0xFF, 0x03,
  81              0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  82              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  83              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  84          };
  85          
  86          const uint8_t code SCAN_RESPONSE_DATA_INITIAL[32] =
  87          {
  88              0x0E,  //User Define Scan response Data Length
  89          
  90              0x0D, 0x09, 0x41, 0x4D, 0x49, 0x43, 0x43, 0x4F,
  91              0x4D, 0x5F, 0x44, 0x65, 0x6D, 0x6F, 0x00, 0x00,
  92              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  93              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  94          };
  95          #endif
  96          
  97          /*********************************************************************
  98          ** Service Gengerator
  99          *********************************************************************/
 100          const uint8_t code ATT_HDL_INVALID[] =
 101          {
 102              0x00, 0x00
 103          };
 104          
 105          const uint8_t code ATT_HDL_GAP_PRIMARY_SERVICE[] =
 106          {
 107              0x00, 0x01,
 108              0x28, 0x00,
 109              2,
 110              0x00, 0x18
 111          };
 112          
 113          const uint8_t code ATT_HDL_GAP_CHARACTERISTIC_DEVICE_NAME[] =
 114          {
 115              0x00, 0x02,
 116              0x28, 0x03,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 3   

 117              0x05,
 118              {
 119                  //0x01 |
 120                  0x02 |
 121                  //0x04 |
 122                  //0x08 |
 123                  //0x10 |
 124                  //0x20 |
 125                  //0x40 |
 126                  //0x80 |
 127                  0x00
 128              },
 129              0x03, 0x00,
 130              0x00, 0x2A
 131          };
 132          
 133          const uint8_t code ATT_HDL_GAP_DEVICE_NAME_INIT[] =
 134          {
 135              0x00, 0x03,
 136              0x2A, 0x00,
 137          #ifdef _PROFILE_WECHAT_
                  0x0B,
                  0x41, 0x4D, 0x49, 0x43, 0x43, 0x4F, 0x4D, 0x2D,
                  0x42, 0x4C, 0x45,
              #elif defined _PROFILE_TAOBAO_
                  0x08,
                  0x4C, 0x53, 0x5F, 0x53, 0x43, 0x41, 0x31, 0x36,
              #elif defined _PROFILE_HOGP_
                  0x10,
                  0x41, 0x4D, 0x49, 0x43, 0x43, 0x4F, 0x4D, 0x5F,
                  0x48, 0x49, 0x44, 0x5F, 0x44, 0x65, 0x6D, 0x6F,
              #else
 149              0x0C,
 150              0x41, 0x4D, 0x49, 0x43, 0x43, 0x4F, 0x4D, 0x5F,
 151              0x44, 0x65, 0x6D, 0x6F,
 152          #endif
 153          };
 154          
 155          uint8_t xdata att_HDL_GAP_DEVICE_NAME[] =
 156          {
 157          #ifdef _PROFILE_WECHAT_
                  0x41, 0x4D, 0x49, 0x43, 0x43, 0x4F, 0x4D, 0x2D,
                  0x42, 0x4C, 0x45,
              #elif defined _PROFILE_TAOBAO_
                  0x4C, 0x53, 0x5F, 0x53, 0x43, 0x41, 0x31, 0x36,
              #elif defined _PROFILE_HOGP_
                  0x41, 0x4D, 0x49, 0x43, 0x43, 0x4F, 0x4D, 0x5F,
                  0x48, 0x49, 0x44, 0x5F, 0x44, 0x65, 0x6D, 0x6F,
              #else
 166              0x41, 0x4D, 0x49, 0x43, 0x43, 0x4F, 0x4D, 0x5F,
 167              0x44, 0x65, 0x6D, 0x6F,
 168          #endif
 169          };
 170          
 171          const uint8_t code ATT_HDL_GAP_CHARACTERISTIC_APPEARANCE[] =
 172          {
 173              0x00, 0x04,
 174              0x28, 0x03,
 175              0x05,
 176              {
 177                  //0x01 |
 178                  0x02 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 4   

 179                  //0x04 |
 180                  //0x08 |
 181                  //0x10 |
 182                  //0x20 |
 183                  //0x40 |
 184                  //0x80 |
 185                  0x00
 186              },
 187              0x05, 0x00,
 188              0x01, 0x2A
 189          };
 190          
 191          const uint8_t code ATT_HDL_GAP_APPEARANCE[] =
 192          {
 193              0x00, 0x05,
 194              0x2A, 0x01,
 195              0x02,
 196              0x00, 0x00,
 197          };
 198          
 199          const uint8_t code ATT_HDL_GAP_CHARACTERISTIC_RECONNECTION_ADDRESS[] =
 200          {
 201              0x00, 0x06,
 202              0x28, 0x03,
 203              0x05,
 204              {
 205                  //0x01 |
 206                  //0x02 |
 207                  //0x04 |
 208                  0x08 |
 209                  //0x10 |
 210                  //0x20 |
 211                  //0x40 |
 212                  //0x80 |
 213                  0x00
 214              },
 215              0x07, 0x00,
 216              0x03, 0x2A
 217          };
 218          
 219          const uint8_t code ATT_HDL_GAP_RECONNECTION_ADDRESS_INIT[] =
 220          {
 221              0x00, 0x07,
 222              0x2A, 0x03,
 223              0x06,
 224              0x00, 0x00, 0x00, 0x00, 0x00, 0x00
 225          };
 226          
 227          uint8_t xdata att_HDL_GAP_RECONNECTION_ADDRESS[] =
 228          {
 229              0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 230          };
 231          
 232          const uint8_t code ATT_HDL_GAP_CHARACTERISTIC_PERIPHERAL_PRIVACY_FLAG[] =
 233          {
 234              0x00, 0x08,
 235              0x28, 0x03,
 236              0x05,
 237              {
 238                  //0x01 |
 239                  0x02 |
 240                  //0x04 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 5   

 241                  //0x08 |
 242                  //0x10 |
 243                  //0x20 |
 244                  //0x40 |
 245                  //0x80 |
 246                  0x00
 247              },
 248              0x09, 0x00,
 249              0x02, 0x2A
 250          };
 251          
 252          const uint8_t code ATT_HDL_GAP_PERIPHERAL_PRIVACY_FLAG[] =
 253          {
 254              0x00, 0x09,
 255              0x2A, 0x02,
 256              0x01,
 257              0x00
 258          };
 259          
 260          const uint8_t code ATT_HDL_GAP_CHARACTERISTIC_PERIPHERAL_PREFERRED_CONNECTION_PARAMETERS[] =
 261          {
 262              0x00, 0x0A,
 263              0x28, 0x03,
 264              0x05,
 265              {
 266                  //0x01 |
 267                  0x02 |
 268                  //0x04 |
 269                  //0x08 |
 270                  //0x10 |
 271                  //0x20 |
 272                  //0x40 |
 273                  //0x80 |
 274                  0x00
 275              },
 276              0x0B, 0x00,
 277              0x04, 0x2A
 278          };
 279          
 280          const uint8_t code ATT_HDL_GAP_PERIPHERAL_PREFERRED_CONNECTION_PARAMETERS[] =
 281          {
 282              0x00, 0x0B,
 283              0x2A, 0x04,
 284              8,
 285              0x50, 0x00,
 286              0x80, 0x00,
 287              0x00, 0x00,
 288              0x2C, 0x01,
 289          };
 290          
 291          const uint8_t code ATT_HDL_GATT_PRIMARY_SERVICE[] =
 292          {
 293              0x00, 0x0C,
 294              0x28, 0x00,
 295              2,
 296              0x01, 0x18
 297          };
 298          
 299          const uint8_t code ATT_HDL_GATT_CHARACTERISTIC_SERVICE_CHANGED[] =
 300          {
 301              0x00, 0x0D,
 302              0x28, 0x03,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 6   

 303              0x05,
 304              {
 305                  //0x01 |
 306                  0x02 |
 307                  //0x04 |
 308                  //0x08 |
 309                  //0x10 |
 310                  0x20 |
 311                  //0x40 |
 312                  //0x80 |
 313                  0x00
 314              },
 315              0x0E, 0x00,
 316              0x05, 0x2A
 317          };
 318          
 319          const uint8_t code ATT_HDL_GATT_SERVICE_CHANGED_INIT[] =
 320          {
 321              0x00, 0x0E,
 322              0x2A, 0x05,
 323              0x04,
 324              0x01, 0x00,
 325              0xFF, 0xFF,
 326          };
 327          
 328          uint8_t xdata att_HDL_GATT_SERVICE_CHANGED[] =
 329          {
 330              0x00, 0x00,
 331              0x00, 0x00,
 332          };
 333          
 334          const uint8_t code ATT_HDL_GATT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
 335          {
 336              0x00, 0x0F,
 337              0x29, 0x02,
 338              0x02,
 339              0x00,
 340              0x00
 341          };
 342          
 343          uint8_t xdata att_HDL_GATT_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
 344          {
 345              0x00, 0x00,
 346          };
 347          
 348          const uint8_t code ATT_HDL_DIS_PRIMARY_SERVICE[] =
 349          {
 350              0x00, 0x10,
 351              0x28, 0x00,
 352              2,
 353              0x0A, 0x18
 354          };
 355          
 356          const uint8_t code ATT_HDL_DIS_CHARACTERISTIC_SERIAL_NUMBER_STRING[] =
 357          {
 358              0x00, 0x11,
 359              0x28, 0x03,
 360              0x05,
 361              {
 362                  //0x01 |
 363                  0x02 |
 364                  //0x04 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 7   

 365                  //0x08 |
 366                  //0x10 |
 367                  //0x20 |
 368                  //0x40 |
 369                  //0x80 |
 370                  0x00
 371              },
 372              0x12, 0x00,
 373              0x25, 0x2A
 374          };
 375          
 376          const uint8_t code ATT_HDL_DIS_SERIAL_NUMBER_STRING[] =
 377          {
 378              0x00, 0x12,
 379              0x2A, 0x25,
 380              0x04,
 381              0x30, 0x30, 0x30, 0x31,
 382          };
 383          
 384          const uint8_t code ATT_HDL_DIS_SERIAL_NUMBER_STRING_PRESENTATION_FORMAT[] =
 385          {
 386              0x00, 0x13,
 387              0x29, 0x04,
 388              0x07,
 389              0x19,
 390              0x00,
 391              0x00, 0x00,
 392              0x01,
 393              0x00, 0x00
 394          };
 395          
 396          const uint8_t code ATT_HDL_DIS_CHARACTERISTIC_MANUFACTURER_NAME_STRING[] =
 397          {
 398              0x00, 0x14,
 399              0x28, 0x03,
 400              0x05,
 401              {
 402                  //0x01 |
 403                  0x02 |
 404                  //0x04 |
 405                  //0x08 |
 406                  //0x10 |
 407                  //0x20 |
 408                  //0x40 |
 409                  //0x80 |
 410                  0x00
 411              },
 412              0x15, 0x00,
 413              0x29, 0x2A
 414          };
 415          
 416          const uint8_t code ATT_HDL_DIS_MANUFACTURER_NAME_STRING[] =
 417          {
 418              0x00, 0x15,
 419              0x2A, 0x29,
 420              13,
 421              0x41, 0x4D, 0x49, 0x43, 0x43, 0x4F, 0x4D, 0x20, 0x45, 0x6C, 0x65, 0x63, 0x2e,
 422          };
 423          
 424          const uint8_t code ATT_HDL_DIS_MANUFACTURER_NAME_STRING_PRESENTATION_FORMAT[] =
 425          {
 426              0x00, 0x16,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 8   

 427              0x29, 0x04,
 428              0x07,
 429              0x19,
 430              0x00,
 431              0x00, 0x00,
 432              0x01,
 433              0x00, 0x00
 434          };
 435          
 436          const uint8_t code ATT_HDL_DIS_CHARACTERISTIC_SYSTEM_ID[] =
 437          {
 438              0x00, 0x17,
 439              0x28, 0x03,
 440              0x05,
 441              {
 442                  //0x01 |
 443                  0x02 |
 444                  //0x04 |
 445                  //0x08 |
 446                  //0x10 |
 447                  //0x20 |
 448                  //0x40 |
 449                  //0x80 |
 450                  0x00
 451              },
 452              0x18, 0x00,
 453              0x23, 0x2A
 454          };
 455          
 456          const uint8_t code ATT_HDL_DIS_SYSTEM_ID[] =
 457          {
 458              0x00, 0x18,
 459              0x2A, 0x23,
 460              0x08,
 461              0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA,
 462          };
 463          
 464          const uint8_t code ATT_HDL_DIS_CHARACTERISTIC_FIRMWARE_REVISION_STRING[] =
 465          {
 466              0x00, 0x19,
 467              0x28, 0x03,
 468              0x05,
 469              {
 470                  //0x01 |
 471                  0x02 |
 472                  //0x04 |
 473                  //0x08 |
 474                  //0x10 |
 475                  //0x20 |
 476                  //0x40 |
 477                  //0x80 |
 478                  0x00
 479              },
 480              0x1A, 0x00,
 481              0x26 , 0x2A
 482          };
 483          
 484          const uint8_t code ATT_HDL_DIS_FIRMWARE_REVISION_STRING[] =
 485          {
 486              0x00, 0x1A,
 487              0x2A, 0x26 ,
 488              0x04,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 9   

 489              0x56, 0x30, 0x2E, 0x38,
 490          };
 491          
 492          const uint8_t code ATT_HDL_DIS_FIRMWARE_REVISION_STRING_PRESENTATION_FORMAT[] =
 493          {
 494              0x00, 0x1B,
 495              0x29, 0x04,
 496              0x07,
 497              0x19,
 498              0x00,
 499              0x00, 0x00,
 500              0x01,
 501              0x00, 0x00
 502          };
 503          
 504          const uint8_t code ATT_HDL_DIS_CHARACTERISTIC_MODEL_NUMBER_STRING[] =
 505          {
 506              0x00, 0x1C,
 507              0x28, 0x03,
 508              0x05,
 509              {
 510                  //0x01 |
 511                  0x02 |
 512                  //0x04 |
 513                  //0x08 |
 514                  //0x10 |
 515                  //0x20 |
 516                  //0x40 |
 517                  //0x80 |
 518                  0x00
 519              },
 520              0x1D, 0x00,
 521              0x24, 0x2A
 522          };
 523          
 524          const uint8_t code ATT_HDL_DIS_MODEL_NUMBER_STRING[] =
 525          {
 526              0x00, 0x1D,
 527              0x2A, 0x24,
 528              0x06,
 529              0x4D, 0x44, 0x38, 0x31, 0x30, 0x37,
 530          };
 531          
 532          const uint8_t code ATT_HDL_DIS_MODEL_NUMBER_STRING_PRESENTATION_FORMAT[] =
 533          {
 534              0x00, 0x1E,
 535              0x29, 0x04,
 536              0x07,
 537              0x19,
 538              0x00,
 539              0x00, 0x00,
 540              0x01,
 541              0x00, 0x00
 542          };
 543          
 544          const uint8_t code ATT_HDL_DIS_CHARACTERISTIC_HARDWARE_REVISION_STRING[] =
 545          {
 546              0x00, 0x1F,
 547              0x28, 0x03,
 548              0x05,
 549              {
 550                  //0x01 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 10  

 551                  0x02 |
 552                  //0x04 |
 553                  //0x08 |
 554                  //0x10 |
 555                  //0x20 |
 556                  //0x40 |
 557                  //0x80 |
 558                  0x00
 559              },
 560              0x20, 0x00,
 561              0x27, 0x2A,
 562          };
 563          
 564          const uint8_t code ATT_HDL_DIS_HARDWARE_REVISION_STRING[] =
 565          {
 566              0x00, 0x20,
 567              0x2A, 0x27,
 568              0x03,
 569              0x55, 0x30, 0x33,
 570          };
 571          
 572          const uint8_t code ATT_HDL_DIS_HARDWARE_REVISION_STRING_PRESENTATION_FORMAT[] =
 573          {
 574              0x00, 0x21,
 575              0x29, 0x04,
 576              0x07,
 577              0x19,
 578              0x00,
 579              0x00, 0x00,
 580              0x01,
 581              0x00, 0x00
 582          };
 583          
 584          const uint8_t code ATT_HDL_DIS_CHARACTERISTIC_SOFTWARE_REVISION_STRING[] =
 585          {
 586              0x00, 0x22,
 587              0x28, 0x03,
 588              0x05,
 589              {
 590                  //0x01 |
 591                  0x02 |
 592                  //0x04 |
 593                  //0x08 |
 594                  //0x10 |
 595                  //0x20 |
 596                  //0x40 |
 597                  //0x80 |
 598                  0x00
 599              },
 600              0x23, 0x00,
 601              0x28, 0x2A
 602          };
 603          
 604          const uint8_t code ATT_HDL_DIS_SOFTWARE_REVISION_STRING[] =
 605          {
 606              0x00, 0x23,
 607              0x2A, 0x28,
 608              0x04,
 609              0x30, 0x30, 0x30, 0x30,
 610          };
 611          
 612          const uint8_t code ATT_HDL_DIS_SOFTWARE_REVISION_STRING_PRESENTATION_FORMAT[] =
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 11  

 613          {
 614              0x00, 0x24,
 615              0x29, 0x04,
 616              0x07,
 617              0x19,
 618              0x00,
 619              0x00, 0x00,
 620              0x01,
 621              0x00, 0x00,
 622          };
 623          
 624          const uint8_t code ATT_HDL_DIS_CHARACTERISTIC_PNP_ID[] =
 625          {
 626              0x00, 0x25,
 627              0x28, 0x03,
 628              0x05,
 629              {
 630                  //0x01 |
 631                  0x02 |
 632                  //0x04 |
 633                  //0x08 |
 634                  //0x10 |
 635                  //0x20 |
 636                  //0x40 |
 637                  //0x80 |
 638                  0x00
 639              },
 640              0x26, 0x00,
 641              0x50, 0x2A
 642          };
 643          
 644          const uint8_t code ATT_HDL_DIS_PNP_ID[] =
 645          {
 646              0x00, 0x26,
 647              0x2A, 0x50,
 648              0x07,
 649              0x01,
 650              0xC0, 0x00,
 651              0x00, 0x00,
 652              0x00, 0x00
 653          };
 654          
 655          const uint8_t code ATT_HDL_OTA_PRIMARY_SERVICE[] =
 656          {
 657              0x00, 0x27,
 658              0x28, 0x00,
 659              0x02,
 660              0xF2, 0xFD
 661          };
 662          
 663          const uint8_t code ATT_HDL_OTA_CHARACTERISTIC_OTA_DATA[] =
 664          {
 665              0x00, 0x28,
 666              0x28, 0x03,
 667              0x05,
 668              {
 669                  //0x01 |
 670                  //0x02 |
 671                  0x04 |
 672                  //0x08 |
 673                  0x10 |
 674                  //0x20 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 12  

 675                  //0x40 |
 676                  //0x80 |
 677                  0x00
 678              },
 679              0x29, 0x00,
 680              0x10, 0xFA
 681          };
 682          
 683          const uint8_t code ATT_HDL_OTA_OTA_DATA_INIT[] =
 684          {
 685              0x00, 0x29,
 686              0xFA, 0x10,
 687              20,
 688              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 689              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 690              0x00, 0x00, 0x00, 0x00,
 691          };
 692          
 693          uint8_t xdata att_HDL_OTA_OTA_DATA[] =
 694          {
 695              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 696              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 697              0x00, 0x00, 0x00, 0x00,
 698          };
 699          
 700          const uint8_t code ATT_HDL_OTA_OTA_DATA_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
 701          {
 702              0x00, 0x2A,
 703              0x29, 0x02,
 704              0x02,
 705              0x00,
 706              0x00
 707          };
 708          
 709          uint8_t xdata att_HDL_OTA_OTA_DATA_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
 710          {
 711              0x00, 0x00,
 712          };
 713          
 714          const uint8_t code ATT_HDL_OTA_OTA_DATA_DESCRIPTION[] =
 715          {
 716              0x00, 0x2B,
 717              0x29, 0x01,
 718              0x08,
 719              0x4F, 0x54, 0x41, 0x5F, 0x44, 0x41, 0x54, 0x41
 720          };
 721          
 722          const uint8_t code ATT_HDL_OTA_CHARACTERISTIC_OTA_CMD_CONTROL_POINT[] =
 723          {
 724              0x00, 0x2C,
 725              0x28, 0x03,
 726              0x05,
 727              {
 728                  //0x01 |
 729                  //0x02 |
 730                  //0x04 |
 731                  0x08 |
 732                  //0x10 |
 733                  0x20 |
 734                  //0x40 |
 735                  //0x80 |
 736                  0x00
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 13  

 737              },
 738              0x2D, 0x00,
 739              0x11, 0xFA
 740          };
 741          
 742          const uint8_t code ATT_HDL_OTA_OTA_CMD_CONTROL_POINT_INIT[] =
 743          {
 744              0x00, 0x2D,
 745              0xFA, 0x11,
 746              0x08,
 747              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 748          };
 749          
 750          uint8_t xdata att_HDL_OTA_OTA_CMD_CONTROL_POINT[] =
 751          {
 752              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 753          };
 754          
 755          const uint8_t code ATT_HDL_OTA_OTA_CMD_CONTROL_POINT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
 756          {
 757              0x00, 0x2E,
 758              0x29, 0x02,
 759              0x02,
 760              0x00,
 761              0x00
 762          };
 763          
 764          uint8_t xdata att_HDL_OTA_OTA_CMD_CONTROL_POINT_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
 765          {
 766              0x00, 0x00
 767          };
 768          
 769          const uint8_t code ATT_HDL_OTA_OTA_CMD_USER_DESCRIPTION[] =
 770          {
 771              0x00, 0x2F,
 772              0x29, 0x01,
 773              0x07,
 774              0x4F, 0x54, 0x41, 0x5F, 0x43, 0x4D, 0x44
 775          };
 776          
 777          const uint8_t code ATT_HDL_OTA_CHARACTERISTIC_OTA_DATA_ERROR_STATUS[] =
 778          {
 779              0x00, 0x30,
 780              0x28, 0x03,
 781              0x05,
 782              {
 783                  //0x01 |
 784                  //0x02 |
 785                  //0x04 |
 786                  //0x08 |
 787                  0x10 |
 788                  //0x20 |
 789                  //0x40 |
 790                  //0x80 |
 791                  0x00
 792              },
 793              0x31, 0x00,
 794              0x13, 0xFA
 795          };
 796          
 797          const uint8_t code ATT_HDL_OTA_DATA_ERROR_STATUS_INIT[] =
 798          {
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 14  

 799              0x00, 0x31,
 800              0xFA, 0x13,
 801              0x04,
 802              0x00, 0x00, 0x00, 0x00,
 803          };
 804          
 805          uint8_t xdata att_HDL_OTA_DATA_ERROR_STATUS[] =
 806          {
 807              0x00, 0x00, 0x00, 0x00,
 808          };
 809          
 810          const uint8_t code ATT_HDL_OTA_DATA_ERROR_STATUS_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
 811          {
 812              0x00, 0x32,
 813              0x29, 0x02,
 814              0x02,
 815              0x00,
 816              0x00
 817          };
 818          
 819          uint8_t xdata att_HDL_OTA_DATA_ERROR_STATUS_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
 820          {
 821              0x00, 0x00
 822          };
 823          
 824          const uint8_t code ATT_HDL_OTA_DATA_ERROR_STATUS_USER_DESCRIPTION[] =
 825          {
 826              0x00, 0x33,
 827              0x29, 0x01,
 828              0x11,
 829              0x44, 0x41, 0x54, 0x41, 0x5F, 0x45, 0x52, 0x52,
 830              0x4F, 0x52, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x55,
 831              0x53,
 832          };
 833          
 834          
 835          const uint8_t code ATT_HDL_BAS_PRIMARY_SERVICE[] =
 836          {
 837              0x00, 0x34,
 838              0x28, 0x00,
 839              0x02,
 840              0x0F, 0x18
 841          };
 842          
 843          const uint8_t code ATT_HDL_BAS_CHARACTERISTIC_BATTERY_LEVEL[] =
 844          {
 845              0x00, 0x35,
 846              0x28, 0x03,
 847              0x05,
 848              {
 849                  //0x01 |
 850                  0x02 |
 851                  //0x04 |
 852                  //0x08 |
 853                  0x10 |
 854                  //0x20 |
 855                  //0x40 |
 856                  //0x80 |
 857                  0x00
 858              },
 859              0x36, 0x00,
 860              0x19, 0x2A
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 15  

 861          };
 862          
 863          const uint8_t code ATT_HDL_BAS_BATTERY_LEVEL_INIT[] =
 864          {
 865              0x00, 0x36,
 866              0x2A, 0x19,
 867              0x01,
 868              100,
 869          };
 870          
 871          uint8_t xdata att_HDL_BAS_BATTERY_LEVEL[] =
 872          {
 873              100,
 874          };
 875          
 876          const uint8_t code ATT_HDL_BAS_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
 877          {
 878              0x00, 0x37,
 879              0x29, 0x02,
 880              0x02,
 881              0x00,
 882              0x00
 883          };
 884          
 885          uint8_t xdata att_HDL_BAS_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
 886          {
 887              0x00, 0x00
 888          };
 889          
 890          #ifdef _PROFILE_HOGP_
              const uint8_t code ATT_HDL_HIDS_PRIMARY_SERVICE[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_BASE_+0x00),
                  0x28, 0x00,
                  0x02,
                  0x12, 0x18,
              };
              
              const uint8_t code ATT_HDL_HIDS_CHARACTERISTIC_HID_INFORMATION[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_BASE_+0x01),
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_HOGP_HDL_OFFSET_BASE_+0x02), 0x00,
                  0x4A, 0x2A
              };
              
              const uint8_t code ATT_HDL_HIDS_HID_INFORMATION[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_BASE_+0x02),
                  0x2A, 0x4A,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 16  

                  0x04,
                  0x13, 0x02,
                  0x40,
                  0x01,
              };
              
              const uint8_t code ATT_HDL_HIDS_CHARACTERISTIC_HID_CONTROL_POINT[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_BASE_+0x03),
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      //0x02 |
                      0x04 |
                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_HOGP_HDL_OFFSET_BASE_+0x04), 0x00,
                  0x4C, 0x2A
              };
              
              const uint8_t code ATT_HDL_HIDS_HID_CONTROL_POINT_INIT[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_BASE_+0x04),
                  0x2A, 0x4C,
                  0x01,
                  0x01,
              };
              
              uint8_t xdata att_HDL_HIDS_HID_CONTROL_POINT[] =
              {
                  0x01,
              };
              
              const uint8_t code ATT_HDL_HIDS_CHARACTERISTIC_REPORT_MAP[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_BASE_+0x05),
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_HOGP_HDL_OFFSET_BASE_+0x06), 0x00,
                  0x4B, 0x2A
              };
              
              const uint8_t code ATT_HDL_HIDS_REPORT_MAP[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_BASE_+0x06),
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 17  

                  0x2A, 0x4B,
                  (SIZE_OF_ATTRIBUTE_VALUE_MS+SIZE_OF_ATTRIBUTE_VALUE_KB+SIZE_OF_ATTRIBUTE_VALUE_CS),
              #ifdef _PROFILE_HOGP_COMSUMER_
                  0x05, 0x0C, 0x09, 0x01, 0xA1, 0x01,
              #ifdef _PROFILE_HOGP_MULTI_
                  0x85, 0x03,
              #endif
                  0x19, 0x00, 0x2A, 0x9C, 0x02, 0x15, 0x00, 0x26,
                  0x9C, 0x02, 0x75, 0x10, 0x95, 0x01, 0x81, 0x00,
                  0xC0,
              #endif
              #ifdef _PROFILE_HOGP_KEYBOARD_
                  0x05, 0x01, 0x09, 0x06, 0xa1, 0x01,
              #ifdef _PROFILE_HOGP_MULTI_
                  0x85, (0x00+__PROFILE_HOGP_KEYBOARD_RPIDOFST_),
              #endif
                  0x05, 0x08, 0x19, 0x01, 0x29, 0x03, 0x75, 0x01,
                  0x95, 0x03, 0x15, 0x00, 0x25, 0x01, 0x91, 0x02,
                  0x95, 0x05, 0x91, 0x01, 0x05, 0x07, 0x19, 0xe0,
                  0x29, 0xe7, 0x95, 0x08, 0x81, 0x02, 0x75, 0x08,
                  0x95, 0x01, 0x81, 0x01, 0x19, 0x00, 0x29, 0x91,
                  0x26, 0xff, 0x00, 0x95, 0x06, 0x81, 0x00,
                  0xC0,
              #endif
              #ifdef _PROFILE_HOGP_MOUSE_
                  0x05, 0x01, 0x09, 0x02, 0xA1, 0x01, 0x09, 0x01,
                  0xA1, 0x00, 0x05, 0x09,
              #ifdef _PROFILE_HOGP_MULTI_
                  0x85, 0x02,
              #endif
                  0x19, 0x01, 0x29, 0x05, 0x15, 0x00, 0x25, 0x01,
                  0x95, 0x05, 0x75, 0x01, 0x81, 0x02, 0x95, 0x01,
                  0x75, 0x03, 0x81, 0x03, 0x05, 0x01, 0x09, 0x30,
                  0x09, 0x31, 0x16, 0x00, 0xF8, 0x26, 0xFF, 0x07,
                  0x75, 0x10, 0x95, 0x02, 0x81, 0x06, 0x09, 0x38,
                  0x15, 0x80, 0x25, 0x7F, 0x75, 0x08, 0x95, 0x01,
                  0x81, 0x06, 0x09, 0x01, 0x15, 0x00, 0x25, 0x03,
                  0x95, 0x01, 0x75, 0x02, 0xB1, 0x02, 0x95, 0x01,
                  0x75, 0x06, 0xB1, 0x03, 0xC0, 0xC0,
              #endif      //#ifdef _PROFILE_HOGP_MOUSE_
              };
              
              #ifdef _PROFILE_HOGP_KEYBOARD_
              const uint8_t code ATT_HDL_HIDS_CHARACTERISTIC_REPORT_KBI[] =
              {
                  0x00, _HOGP_HDL_OFFSET_KB_,
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      0x02 |
                      //0x04 |
                      0x08 |
                      0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_HOGP_HDL_OFFSET_KB_+0x01), 0x00,
                  0x4D, 0x2A
              };
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 18  

              
              const uint8_t code ATT_HDL_HIDS_REPORT_KBI_INIT[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_KB_+0x01),
                  0x2A, 0x4D,
                  0x08,
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
              };
              
              uint8_t xdata att_HDL_HIDS_REPORT_KBI[] =
              {
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
              };
              
              const uint8_t code ATT_HDL_HIDS_REPORT_KBI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_KB_+0x02),
                  0x29, 0x02,
                  0x02,
                  0x00,
                  0x00,
              };
              
              uint8_t xdata att_HDL_HIDS_REPORT_KBI_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
              {
                  0x00, 0x00,
              };
              
              const uint8_t code ATT_HDL_HIDS_REPORT_KBI_REPORT_REFERENCE[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_KB_+0x03),
                  0x29, 0x08,
                  0x02,
                  (0x00+__PROFILE_HOGP_KEYBOARD_RPIDOFST_),
                  0x01
              };
              
              const uint8_t code ATT_HDL_HIDS_CHARACTERISTIC_REPORT_KBO[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_KB_+0x04),
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      0x02 |
                      0x04 |
                      0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_HOGP_HDL_OFFSET_KB_+0x05), 0x00,
                  0x4D, 0x2A
              };
              
              const uint8_t code ATT_HDL_HIDS_REPORT_KBO_INIT[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_KB_+0x05),
                  0x2A, 0x4D,
                  0x01,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 19  

                  0x03
              };
              
              uint8_t xdata att_HDL_HIDS_REPORT_KBO[] =
              {
                  0x03,
              };
              
              const uint8_t code ATT_HDL_HIDS_REPORT_KBO_REPORT_REFERENCE[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_KB_+0x06),
                  0x29, 0x08,
                  0x02,
                  (0x00+__PROFILE_HOGP_KEYBOARD_RPIDOFST_),
                  0x02,
              };
              #endif
              
              #ifdef _PROFILE_HOGP_MOUSE_
              const uint8_t code ATT_HDL_HIDS_CHARACTERISTIC_REPORT_MSI[] =
              {
                  0x00, _HOGP_HDL_OFFSET_MOUSE_,
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      0x02 |
                      //0x04 |
                      0x08 |
                      0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_HOGP_HDL_OFFSET_MOUSE_+0x01), 0x00,
                  0x4D, 0x2A
              };
              
              const uint8_t code ATT_HDL_HIDS_REPORT_MSI_INIT[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_MOUSE_+0x01),
                  0x2A, 0x4D,
                  0x06,
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
              };
              
              uint8_t xdata att_HDL_HIDS_REPORT_MSI[] =
              {
                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
              };
              
              const uint8_t code ATT_HDL_HIDS_REPORT_MSI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_MOUSE_+0x02),
                  0x29, 0x02,
                  0x02,
                  0x00,
                  0x00
              };
              
              uint8_t xdata att_HDL_HIDS_REPORT_MSI_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 20  

              {
                  0x00, 0x00,
              };
              
              
              const uint8_t code ATT_HDL_HIDS_REPORT_MSI_REPORT_REFERENCE[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_MOUSE_+0x03),
                  0x29, 0x08,
                  0x02,
                  (0x00+__PROFILE_HOGP_MS_RPIDOFST_),
                  0x01
              };
              
              const uint8_t code ATT_HDL_HIDS_CHARACTERISTIC_REPORT_MSF[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_MOUSE_+0x04),
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      0x02 |
                      //0x04 |
                      0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_HOGP_HDL_OFFSET_MOUSE_+0x05), 0x00,
                  0x4D, 0x2A
              };
              
              const uint8_t code ATT_HDL_HIDS_REPORT_MSF_INIT[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_MOUSE_+0x05),
                  0x2A, 0x4D,
                  0x01,
                  0x03
              };
              
              uint8_t xdata att_HDL_HIDS_REPORT_MSF[] =
              {
                  0x03,
              };
              
              const uint8_t code ATT_HDL_HIDS_REPORT_MSF_REPORT_REFERENCE[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_MOUSE_+0x06),
                  0x29, 0x08,
                  0x02,
                  (0x00+__PROFILE_HOGP_MS_RPIDOFST_),
                  0x03
              };
              
              const uint8_t code ATT_HDL_HIDS_REPORT_MSF_USER_DESCRIPTION[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_MOUSE_+0x07),
                  0x29, 0x01,
                  (0x00+65),
                  0x42, 0x4C, 0x45, 0x20, 0x4D, 0x4F, 0x55, 0x53,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 21  

                  0x45, 0x20, 0x52, 0x45, 0x53, 0x4F, 0x4C, 0x55,
                  0x54, 0x49, 0x4F, 0x4E, 0x20, 0x49, 0x4E, 0x20,
                  0x43, 0x50, 0x49, 0x0A, 0x20, 0x30, 0x20, 0x3D,
                  0x20, 0x34, 0x30, 0x30, 0x0A, 0x20, 0x31, 0x20,
                  0x3D, 0x20, 0x38, 0x30, 0x30, 0x0A, 0x20, 0x32,
                  0x20, 0x3D, 0x20, 0x31, 0x32, 0x30, 0x30, 0x0A,
                  0x20, 0x33, 0x20, 0x3D, 0x20, 0x31, 0x36, 0x30,
                  0x30,
              };
              #endif
              
              #ifdef _PROFILE_HOGP_COMSUMER_
              const uint8_t code ATT_HDL_HIDS_CHARACTERISTIC_REPORT_CSI[] =
              {
                  0x00, _HOGP_HDL_OFFSET_CONSUMER_,
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      0x02 |
                      //0x04 |
                      0x08 |
                      0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_HOGP_HDL_OFFSET_CONSUMER_+0x01), 0x00,
                  0x4D, 0x2A
              };
              
              const uint8_t code ATT_HDL_HIDS_REPORT_CSI_INIT[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_CONSUMER_+0x01),
                  0x2A, 0x4D,
                  0x02,
                  0x00, 0x00,
              };
              
              uint8_t xdata att_HDL_HIDS_REPORT_CSI[] =
              {
                  0x00, 0x00,
              };
              
              const uint8_t code ATT_HDL_HIDS_REPORT_CSI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_CONSUMER_+0x02),
                  0x29, 0x02,
                  0x02,
                  0x00,
                  0x00,
              };
              
              uint8_t xdata att_HDL_HIDS_REPORT_CSI_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
              {
                  0x00, 0x00
              };
              
              const uint8_t code ATT_HDL_HIDS_REPORT_CSI_REPORT_REFERENCE[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_CONSUMER_+0x03),
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 22  

                  0x29, 0x08,
                  0x02,
                  (0x00+__PROFILE_HOGP_CS_RPIDOFST_),
                  0x01
              };
              #endif
              
              const uint8_t code ATT_HDL_HIDS_CHARACTERISTIC_PROTOCOL_MODE[] =
              {
                  0x00, _HOGP_HDL_OFFSET_RPT_REF_,
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      0x02 |
                      0x04 |
                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_HOGP_HDL_OFFSET_RPT_REF_+0x01), 0x00,
                  0x4E, 0x2A
              };
              
              const uint8_t code ATT_HDL_HIDS_PROTOCOL_MODE_INIT[] =
              {
                  0x00, (_HOGP_HDL_OFFSET_RPT_REF_+0x01),
                  0x2A, 0x4E,
                  0x01,
                  1,
              };
              
              uint8_t xdata att_HDL_HIDS_PROTOCOL_MODE[] =
              {
                  1,
              };
              #endif    //ifdef _PROFILE_HOGP_
1335          
1336          #ifdef _PROFILE_TAOBAO_
              const uint8_t code ATT_HDL_TAOBAO_PRIMARY_SERVICE[] =
              {
                  0x00, _TAOBAO_HDL_OFFSET_BASE_,
                  0x28, 0x00,
                  0x02,
                  0xB3, 0xFE,
              };
              
              const uint8_t code ATT_HDL_TAOBAO_CHARACTERISTIC_DATW[] =
              {
                  0x00, (_TAOBAO_HDL_OFFSET_BASE_+0x01),
                  0x28, 0x03,
                  0x05,
                  //0x11,
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      0x08 |
                      //0x10 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 23  

                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_TAOBAO_HDL_OFFSET_BASE_+0x02), 0x00,
                  0xD5, 0xFE
              };
              
              const uint8_t code ATT_HDL_TAOBAO_DATW_INIT[] =
              {
                  0x00, (_TAOBAO_HDL_OFFSET_BASE_+0x02),
                  0xFE, 0xD5,
                  0x14,
                  0x20, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                  0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
                  0x10, 0x11, 0x12, 0x13
              };
              
              uint8_t xdata att_HDL_TAOBAO_DATW[] =
              {
                  0x20, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                  0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
                  0x10, 0x11, 0x12, 0x13
              };
              
              const uint8_t code ATT_HDL_TAOBAO_CHARACTERISTIC_DATI[] =
              {
                  0x00, (_TAOBAO_HDL_OFFSET_BASE_+0x03),
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_TAOBAO_HDL_OFFSET_BASE_+0x04), 0x00,
                  0xD6, 0xFE
              };
              
              const uint8_t code ATT_HDL_TAOBAO_DATI_INIT[] =
              {
                  0x00, (_TAOBAO_HDL_OFFSET_BASE_+0x04),
                  0xFE, 0xD6,
                  0x14,
                  0x10, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                  0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
                  0x10, 0x11, 0x12, 0x13
              };
              
              uint8_t xdata att_HDL_TAOBAO_DATI[] =
              {
                  0x10, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                  0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
                  0x10, 0x11, 0x12, 0x13
              };
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 24  

              
              const uint8_t code ATT_HDL_TAOBAO_DATI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  0x00, (_TAOBAO_HDL_OFFSET_BASE_+0x05),
                  0x29, 0x02,
                  0x02,
                  0x00,
                  0x00
              };
              
              uint8_t xdata att_HDL_TAOBAO_DATI_MEASUREMENT_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
              {
                  0x00, 0x00,
              };
              #endif    //ifdef _PROFILE_TAOBAO_
1434          
1435          #ifdef _PROFILE_WECHAT_
              const uint8_t code ATT_HDL_WECHAT_PRIMARY_SERVICE[] =
              {
                  0x00, _WECHAT_HDL_OFFSET_BASE_,
                  0x28, 0x00,
                  0x02,
                  0xE7, 0xFE,
              };
              
              const uint8_t code ATT_HDL_WECHAT_CHARACTERISTIC_DATW[] =
              {
                  0x00, (_WECHAT_HDL_OFFSET_BASE_+0x01),
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_WECHAT_HDL_OFFSET_BASE_+0x02), 0x00,
                  0xC7, 0xFE
              };
              
              const uint8_t code ATT_HDL_WECHAT_DATW_INIT[] =
              {
                  0x00, (_WECHAT_HDL_OFFSET_BASE_+0x02),
                  0xFE, 0xC7,
                  0x14,
                  0x20, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                  0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
                  0x10, 0x11, 0x12, 0x13
              };
              
              uint8_t xdata att_HDL_WECHAT_DATW[] =
              {
                  0x20, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                  0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
                  0x10, 0x11, 0x12, 0x13
              };
              
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 25  

              const uint8_t code ATT_HDL_WECHAT_CHARACTERISTIC_DATI[] =
              {
                  0x00, (_WECHAT_HDL_OFFSET_BASE_+0x03),
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_WECHAT_HDL_OFFSET_BASE_+0x04), 0x00,
                  0xC8, 0xFE
              };
              
              const uint8_t code ATT_HDL_WECHAT_DATI_INIT[] =
              {
                  0x00, (_WECHAT_HDL_OFFSET_BASE_+0x04),
                  0xFE, 0xC8,
                  0x14,
                  0x10, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                  0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
                  0x10, 0x11, 0x12, 0x13
              };
              
              uint8_t xdata att_HDL_WECHAT_DATI[] =
              {
                  0x10, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                  0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
                  0x10, 0x11, 0x12, 0x13
              };
              
              const uint8_t code ATT_HDL_WECHAT_DATI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  0x00, (_WECHAT_HDL_OFFSET_BASE_+0x05),
                  0x29, 0x02,
                  0x02,
                  0x00,
                  0x00
              };
              
              uint8_t xdata att_HDL_WECHAT_DATI_MEASUREMENT_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
              {
                  0x00, 0x00,
              };
              
              const uint8_t code ATT_HDL_WECHAT_CHARACTERISTIC_DATR[] =
              {
                  0x00, (_WECHAT_HDL_OFFSET_BASE_+0x06),
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 26  

                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_WECHAT_HDL_OFFSET_BASE_+0x07), 0x00,
                  0xC9, 0xFE
              };
              
              const uint8_t code ATT_HDL_WECHAT_DATR[] =
              {
                  0x00, (_WECHAT_HDL_OFFSET_BASE_+0x07),
                  0xFE, 0xC9,
                  0x14,
                  0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                  0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
                  0x10, 0x11, 0x12, 0x13
              };
              
              #ifdef _PROFILE_WECHAT_SIMPLE_MODE_
              const uint8_t code ATT_HDL_WECHAT_SIMPLEMODE_CHARACTERISTIC_DATRI[] =
              {
                  0x00, _WECHAT_SIMPLE_MODE_HDL_OFFSET_BASE_,
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_WECHAT_SIMPLE_MODE_HDL_OFFSET_BASE_+0x01), 0x00,
                  0xA1, 0xFE
              };
              
              const uint8_t code ATT_HDL_WECHAT_SIMPLEMODE_DATRI_INIT[] =
              {
                  0x00, (_WECHAT_SIMPLE_MODE_HDL_OFFSET_BASE_+0x01),
                  0xFE, 0xA1,
                  0x14,
                  0x10, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                  0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
                  0x10, 0x11, 0x12, 0x13
              };
              
              uint8_t xdata att_HDL_WECHAT_SIMPLEMODE_DATRI[] =
              {
                  0x10, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                  0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
                  0x10, 0x11, 0x12, 0x13, 0xFF
              };
              
              const uint8_t code ATT_HDL_WECHAT_SIMPLEMODE_DATRI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  0x00, (_WECHAT_SIMPLE_MODE_HDL_OFFSET_BASE_+0x02),
                  0x29, 0x02,
                  0x02,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 27  

                  0x00,
                  0x00
              };
              
              uint8_t xdata att_HDL_WECHAT_SIMPLEMODE_DATRI_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
              {
                  0x00,
                  0x00,
              };
              
              const uint8_t code ATT_HDL_WECHAT_SIMPLEMODE_CHARACTERISTIC_DATRWI[] =
              {
                  0x00, (_WECHAT_SIMPLE_MODE_HDL_OFFSET_BASE_+0x03),
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      0x02 |
                      //0x04 |
                      0x08 |
                      //0x10 |
                      0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_WECHAT_SIMPLE_MODE_HDL_OFFSET_BASE_+0x04), 0x00,
                  0xA2, 0xFE
              };
              
              const uint8_t code ATT_HDL_WECHAT_SIMPLEMODE_DATRWI_INIT[] =
              {
                  0x00, (_WECHAT_SIMPLE_MODE_HDL_OFFSET_BASE_+0x04),
                  0xFE, 0xA2,
                  0x14,
                  0x10, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                  0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
                  0x10, 0x11, 0x12, 0x13
              };
              
              uint8_t xdata att_HDL_WECHAT_SIMPLEMODE_DATRWI[] =
              {
                  0x10, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                  0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
                  0x10, 0x11, 0x12, 0x13, 0xFF
              };
              
              const uint8_t code ATT_HDL_WECHAT_SIMPLEMODE_DATRWI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  0x00, (_WECHAT_SIMPLE_MODE_HDL_OFFSET_BASE_+0x05),
                  0x29, 0x02,
                  0x02,
                  0x00,
                  0x00
              };
              
              uint8_t xdata att_HDL_WECHAT_SIMPLEMODE_DATRWI_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
              {
                  0x00,
                  0x00,
              };
              #endif    //ifdef _PROFILE_WECHAT_SIMPLE_MODE_
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 28  

              #endif    //ifdef _PROFILE_WECHAT_
1668          
1669          #ifdef _PROFILE_USER_DEFINE_01_
1670          const uint8_t code ATT_HDL_USER_DEFINE_01_PRIMARY_SERVICE[] =
1671          {
1672              0x00, _UDF01S_HDL_OFFSET_BASE_,
1673              0x28, 0x00,
1674              0x02,
1675              GATT_SPEC_CSTM_SERVICES_UDF01S, GATT_SPEC_CSTM_SERVICES
1676          };
1677          
1678          const uint8_t code ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAN01[] =
1679          {
1680              0x00, (_UDF01S_HDL_OFFSET_BASE_+0x01),
1681              0x28, 0x03,
1682              0x05,
1683              {
1684                  //0x01 |
1685                  //0x02 |
1686                  //0x04 |
1687                  //0x08 |
1688                  0x10 |
1689                  //0x20 |
1690                  //0x40 |
1691                  //0x80 |
1692                  0x00
1693              },
1694              (_UDF01S_HDL_OFFSET_BASE_+0x02), 0x00,
1695              GATT_SPEC_CSTM_CHARACTERISTIC_UDATAN01, GATT_SPEC_CSTM_CHARACTERISTIC
1696          };
1697          
1698          const uint8_t code ATT_HDL_USER_DEFINE_01_DATAN01_INIT[] =
1699          {
1700              0x00, (_UDF01S_HDL_OFFSET_BASE_+0x02),
1701              GATT_SPEC_CSTM_CHARACTERISTIC, GATT_SPEC_CSTM_CHARACTERISTIC_UDATAN01,
1702              0x14,
1703              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1704              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1705              0x00, 0x00, 0x00, 0x00,
1706          };
1707          
1708          uint8_t xdata att_HDL_USER_DEFINE_01_DATAN01[] =
1709          {
1710              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1711              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1712              0x00, 0x00, 0x00, 0x00,
1713          };
1714          
1715          const uint8_t code ATT_HDL_USER_DEFINE_01_DATAN01_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
1716          {
1717              0x00, (_UDF01S_HDL_OFFSET_BASE_+0x03),
1718              0x29, 0x02,
1719              0x02,
1720              0x00,
1721              0x00
1722          };
1723          
1724          uint8_t xdata att_HDL_USER_DEFINE_01_DATAN01_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
1725          {
1726              0x00, 0x00,
1727          };
1728          
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 29  

1729          const uint8_t code ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAW01[] =
1730          {
1731              0x00, (_UDF01S_HDL_OFFSET_BASE_+0x04),
1732              0x28, 0x03,
1733              0x05,
1734              {
1735                  //0x01 |
1736                  //0x02 |
1737                  //0x04 |
1738                  0x08 |
1739                  //0x10 |
1740                  //0x20 |
1741                  //0x40 |
1742                  //0x80 |
1743                  0x00
1744              },
1745              (_UDF01S_HDL_OFFSET_BASE_+0x05), 0x00,
1746              GATT_SPEC_CSTM_CHARACTERISTIC_UDATAW01, GATT_SPEC_CSTM_CHARACTERISTIC
1747          };
1748          
1749          const uint8_t code ATT_HDL_USER_DEFINE_01_DATAW01_INIT[] =
1750          {
1751              0x00, (_UDF01S_HDL_OFFSET_BASE_+0x05),
1752              GATT_SPEC_CSTM_CHARACTERISTIC, GATT_SPEC_CSTM_CHARACTERISTIC_UDATAW01,
1753              0x14,
1754              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1755              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1756              0x00, 0x00, 0x00, 0x00,
1757          };
1758          
1759          uint8_t xdata att_HDL_USER_DEFINE_01_DATAW01[] =
1760          {
1761              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1762              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1763              0x00, 0x00, 0x00, 0x00,
1764          };
1765          
1766          const uint8_t code ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAN02[] =
1767          {
1768              0x00, (_UDF01S_HDL_OFFSET_BASE_+0x06),
1769              0x28, 0x03,
1770              0x05,
1771              {
1772                  //0x01 |
1773                  //0x02 |
1774                  //0x04 |
1775                  //0x08 |
1776                  0x10 |
1777                  //0x20 |
1778                  //0x40 |
1779                  //0x80 |
1780                  0x00
1781              },
1782              (_UDF01S_HDL_OFFSET_BASE_+0x07), 0x00,
1783              GATT_SPEC_CSTM_CHARACTERISTIC_UDATAN02, GATT_SPEC_CSTM_CHARACTERISTIC
1784          };
1785          
1786          const uint8_t code ATT_HDL_USER_DEFINE_01_DATAN02_INIT[] =
1787          {
1788              0x00, (_UDF01S_HDL_OFFSET_BASE_+0x07),
1789              GATT_SPEC_CSTM_CHARACTERISTIC, GATT_SPEC_CSTM_CHARACTERISTIC_UDATAN02,
1790              0x14,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 30  

1791              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1792              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1793              0x00, 0x00, 0x00, 0x00,
1794          };
1795          
1796          uint8_t xdata att_HDL_USER_DEFINE_01_DATAN02[] =
1797          {
1798              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1799              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1800              0x00, 0x00, 0x00, 0x00,
1801          };
1802          
1803          const uint8_t code ATT_HDL_USER_DEFINE_01_DATAN02_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
1804          {
1805              0x00, (_UDF01S_HDL_OFFSET_BASE_+0x08),
1806              0x29, 0x02,
1807              0x02,
1808              0x00,
1809              0x00
1810          };
1811          
1812          uint8_t xdata att_HDL_USER_DEFINE_01_DATAN02_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
1813          {
1814              0x00, 0x00,
1815          };
1816          
1817          const uint8_t code ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAW02[] =
1818          {
1819              0x00, (_UDF01S_HDL_OFFSET_BASE_+0x09),
1820              0x28, 0x03,
1821              0x05,
1822              {
1823                  //0x01 |
1824                  //0x02 |
1825                  //0x04 |
1826                  0x08 |
1827                  //0x10 |
1828                  //0x20 |
1829                  //0x40 |
1830                  //0x80 |
1831                  0x00
1832              },
1833              (_UDF01S_HDL_OFFSET_BASE_+0x0A), 0x00,
1834              GATT_SPEC_CSTM_CHARACTERISTIC_UDATAW02, GATT_SPEC_CSTM_CHARACTERISTIC
1835          };
1836          
1837          const uint8_t code ATT_HDL_USER_DEFINE_01_DATAW02_INIT[] =
1838          {
1839              0x00, (_UDF01S_HDL_OFFSET_BASE_+0x0A),
1840              GATT_SPEC_CSTM_CHARACTERISTIC, GATT_SPEC_CSTM_CHARACTERISTIC_UDATAW02,
1841              0x14,
1842              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1843              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1844              0x00, 0x00, 0x00, 0x00,
1845          };
1846          
1847          uint8_t xdata att_HDL_USER_DEFINE_01_DATAW02[] =
1848          {
1849              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1850              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
1851              0x00, 0x00, 0x00, 0x00,
1852          };
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 31  

1853          
1854          const uint8_t code ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAR01[] =
1855          {
1856              0x00, (_UDF01S_HDL_OFFSET_BASE_+0x0B),
1857              0x28, 0x03,
1858              0x05,
1859              {
1860                  //0x01 |
1861                  0x02 |
1862                  //0x04 |
1863                  //0x08 |
1864                  //0x10 |
1865                  //0x20 |
1866                  //0x40 |
1867                  //0x80 |
1868                  0x00
1869              },
1870              (_UDF01S_HDL_OFFSET_BASE_+0x0C), 0x00,
1871              GATT_SPEC_CSTM_CHARACTERISTIC_UDATAR01, GATT_SPEC_CSTM_CHARACTERISTIC
1872          };
1873          
1874          const uint8_t code ATT_HDL_USER_DEFINE_01_DATAR01[] =
1875          {
1876              0x00, (_UDF01S_HDL_OFFSET_BASE_+0x0C),
1877              GATT_SPEC_CSTM_CHARACTERISTIC, GATT_SPEC_CSTM_CHARACTERISTIC_UDATAR01,
1878              0x14,
1879              0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
1880              0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
1881              0x10, 0x11, 0x12, 0x13
1882          };
1883          #endif    //ifdef _PROFILE_USER_DEFINE_01_
1884          
1885          #ifdef _PROFILE_GLS_
              const uint8_t code ATT_HDL_GLS_PRIMARY_SERVICE[] =
              {
                  0x00, _GLS_HDL_OFFSET_BASE_,
                  0x28, 0x00,
                  0x02,
                  0x08, 0x18
              };
              
              const uint8_t code ATT_HDL_GLS_CHARACTERISTIC_GLUCOSE_MEASUREMENT[] =
              {
                  0x00, (_GLS_HDL_OFFSET_BASE_+1),
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_GLS_HDL_OFFSET_BASE_+2), 0x00,
                  0x18, 0x2A,
              };
              
              const uint8_t code ATT_HDL_GLS_GLUCOSE_MEASUREMENT_INIT[] =
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 32  

              {
                  0x00, (_GLS_HDL_OFFSET_BASE_+2),
                  0x2A, 0x18,
                  0x11,
                  0x00,          //Flags
                  0x00, 0x00,    //Sequence Number
                  0x00, 0x00,    //UTC Time: Year
                  0x00,          //UTC Time: Month
                  0x00,          //UTC Time: Day
                  0x00,          //UTC Time: Hours
                  0x00,          //UTC Time: Minutes
                  0x00,          //UTC Time: Seconds
                  0x00, 0x00,    //Time Offset
                  0x00, 0x00,    //Glucose Concentration - units of kg/L (0) or mol/L (1)
                  0x00,          //Type, Sample Location
                  0x00, 0x00,    //Sensor Status Annunciation
              };
              
              uint8_t xdata att_HDL_GLS_GLUCOSE_MEASUREMENT[] =
              {
                  0x11,
                  0x00,          //Flags
                  0x00, 0x00,    //Sequence Number
                  0x00, 0x00,    //UTC Time: Year
                  0x00,          //UTC Time: Month
                  0x00,          //UTC Time: Day
                  0x00,          //UTC Time: Hours
                  0x00,          //UTC Time: Minutes
                  0x00,          //UTC Time: Seconds
                  0x00, 0x00,    //Time Offset
                  0x00, 0x00,    //Glucose Concentration - units of kg/L (0) or mol/L (1)
                  0x00,          //Type, Sample Location
                  0x00, 0x00,    //Sensor Status Annunciation
              };
              
              const uint8_t code ATT_HDL_GLS_GLUCOSE_MEASUREMENT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  0x00, (_GLS_HDL_OFFSET_BASE_+3),
                  0x29, 0x02,
                  0x02,
                  0x00,
                  0x00,
              };
              
              uint8_t xdata att_HDL_GLS_GLUCOSE_MEASUREMENT_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
              {
                  0x00,
                  0x00,
              };
              
              const uint8_t code ATT_HDL_GLS_CHARACTERISTIC_GLUCOSE_MEASUREMENT_CONTEXT[] =
              {
                  0x00, (_GLS_HDL_OFFSET_BASE_+4),
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      0x10 |
                      //0x20 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 33  

                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_GLS_HDL_OFFSET_BASE_+5), 0x00,
                  0x34, 0x2A
              };
              
              const uint8_t code ATT_HDL_GLS_GLUCOSE_MEASUREMENT_CONTEXT_INIT[] =
              {
                  0x00, (_GLS_HDL_OFFSET_BASE_+5),
                  0x2A, 0x34,
                  0x11,
                  0x00,          //Flags
                  0x00, 0x00,    //Sequence Number
                  0x00,          //Extended Flags, Reserved for future use
                  0x00,          //Carbohydrate ID
                  0x00, 0x00,    //Carbohydrate - units of kilograms
                  0x00,          //Meal
                  0x00,          //Tester, Health
                  0x00, 0x00,    //Exercise Duration
                  0x00,          //Exercise Intensity
                  0x00,          //Medication ID
                  0x00, 0x00,    //Medication - units of kilograms (0) or liters (1)
                  0x00, 0x00,    //HbA1c
              };
              
              uint8_t xdata att_HDL_GLS_GLUCOSE_MEASUREMENT_CONTEXT[] =
              {
                  0x00,          //Flags
                  0x00, 0x00,    //Sequence Number
                  0x00,          //Extended Flags, Reserved for future use
                  0x00,          //Carbohydrate ID
                  0x00, 0x00,    //Carbohydrate - units of kilograms
                  0x00,          //Meal
                  0x00,          //Tester, Health
                  0x00, 0x00,    //Exercise Duration
                  0x00,          //Exercise Intensity
                  0x00,          //Medication ID
                  0x00, 0x00,    //Medication - units of kilograms (0) or liters (1)
                  0x00, 0x00,    //HbA1c
              };
              
              const uint8_t code ATT_HDL_GLS_GLUCOSE_MEASUREMENT_CONTEXT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  0x00, (_GLS_HDL_OFFSET_BASE_+6),
                  0x29, 0x02,
                  0x02,
                  0x00,
                  0x00
              };
              
              uint8_t xdata att_HDL_GLS_GLUCOSE_MEASUREMENT_CONTEXT_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
              {
                  0x00,
                  0x00,
              };
              
              const uint8_t code ATT_HDL_GLS_CHARACTERISTIC_GLUCOSE_FEATURE[] =
              {
                  0x00, (_GLS_HDL_OFFSET_BASE_+7),
                  0x28, 0x03,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 34  

                  0x05,
                  {
                      //0x01 |
                      0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_GLS_HDL_OFFSET_BASE_+8), 0x00,
                  0x51, 0x2A
              };
              
              const uint8_t code ATT_HDL_GLS_GLUCOSE_FEATURE_INIT[] =
              {
                  0x00, (_GLS_HDL_OFFSET_BASE_+8),
                  0x2A, 0x51,
                  0x02,
                  {
                      0x01 |
                      0x02 |
                      0x04 |
                      0x08 |
                      0x10 |
                      0x20 |
                      0x40 |
                      0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      0x02 |
                      0x04 |
                      0x00,
                  },
              };
              
              const uint8_t code ATT_HDL_GLS_CHARACTERISTIC_RECORD_ACCESS_CONTROL_POINT[] =
              {
                  0x00, (_GLS_HDL_OFFSET_BASE_+9),
                  0x28, 0x03,
                  0x05,
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      0x08 |
                      //0x10 |
                      0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  (_GLS_HDL_OFFSET_BASE_+10), 0x00,
                  0x52, 0x2A,
              };
              
              const uint8_t code ATT_HDL_GLS_RECORD_ACCESS_CONTROL_POINT_INIT[] =
              {
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 35  

                  0x00, (_GLS_HDL_OFFSET_BASE_+10),
                  0x2A, 0x52,
                  0x07,
                  0x00,                     //Op Code
                  0x00,                     //Operator
                  0x00,                     //Operand, Filter Type
                  0x00, 0x00, 0x00, 0x00    //Operand, Filter Parameters
              };
              
              uint8_t xdata att_HDL_GLS_RECORD_ACCESS_CONTROL_POINT[] =
              {
                  0x00,                     //Op Code
                  0x00,                     //Operator
                  0x00,                     //Operand, Filter Type
                  0x00, 0x00, 0x00, 0x00    //Operand, Filter Parameters
              };
              
              const uint8_t code ATT_HDL_GLS_RECORD_ACCESS_CONTROL_POINT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  0x00, (_GLS_HDL_OFFSET_BASE_+11),
                  0x29, 0x02,
                  0x02,
                  0x00,
                  0x00,
              };
              
              uint8_t xdata att_HDL_GLS_RECORD_ACCESS_CONTROL_POINT_CLIENT_CHARACTERISTIC_CONFIGURATION[] =
              {
                  0x00,
                  0x00,
              };
              #endif  //_PROFILE_GLS_
2133          
2134          const uint8_t code ATT_PERMISSION_NULL[] =
2135          {
2136              {
2137                  //0x01 |
2138                  //0x02 |
2139                  //0x04 |
2140                  //0x08 |
2141                  //0x10 |
2142                  //0x20 |
2143                  //0x40 |
2144                  //0x80 |
2145                  0x00
2146              },
2147              {
2148                  0x01 |
2149                  //0x02 |
2150                  0x00
2151              },
2152          };
2153          
2154          const uint8_t code ATT_PERMISSION_PRIMARY_SERVICE[] =
2155          {
2156              {
2157                  0x01 |
2158                  //0x02 |
2159                  //0x04 |
2160                  //0x08 |
2161                  //0x10 |
2162                  //0x20 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 36  

2163                  //0x40 |
2164                  //0x80 |
2165                  0x00
2166              },
2167              {
2168                  0x01 |
2169                  //0x02 |
2170                  0x00
2171              },
2172          };
2173          
2174          const uint8_t code ATT_PERMISSION_CHARACTERISTIC[] =
2175          {
2176              {
2177                  0x01 |
2178                  //0x02 |
2179                  //0x04 |
2180                  //0x08 |
2181                  //0x10 |
2182                  //0x20 |
2183                  //0x40 |
2184                  //0x80 |
2185                  0x00
2186              },
2187              {
2188                  0x01 |
2189                  //0x02 |
2190                  0x00
2191              },
2192          };
2193          
2194          const uint8_t code ATT_PERMISSION_HDL_GAP_DEVICE_NAME_INIT[] =
2195          {
2196              {
2197                  0x01 |
2198                  //0x02 |
2199                  //0x04 |
2200                  //0x08 |
2201                  //0x10 |
2202                  //0x20 |
2203                  //0x40 |
2204                  //0x80 |
2205                  0x00
2206              },
2207              {
2208                  0x01 |
2209                  //0x02 |
2210                  0x00
2211              },
2212          };
2213          
2214          const uint8_t code ATT_PERMISSION_HDL_GAP_APPEARANCE[] =
2215          {
2216              {
2217                  0x01 |
2218                  //0x02 |
2219                  //0x04 |
2220                  //0x08 |
2221                  //0x010 |
2222                  //0x020 |
2223                  //0x040 |
2224                  //0x080 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 37  

2225                  0x00
2226              },
2227              {
2228                  0x01 |
2229                  //0x02 |
2230                  0x00
2231              },
2232          };
2233          
2234          const uint8_t code ATT_PERMISSION_HDL_GAP_RECONNECTION_ADDRESS_INIT[] =
2235          {
2236              {
2237                  //0x01 |
2238                  0x02 |
2239                  //0x04 |
2240                  //0x08 |
2241                  //0x10 |
2242                  //0x20 |
2243                  //0x40 |
2244                  //0x80 |
2245                  0x00
2246              },
2247              {
2248                  0x01 |
2249                  //0x02 |
2250                  0x00
2251              },
2252          };
2253          
2254          const uint8_t code ATT_PERMISSION_HDL_GAP_PERIPHERAL_PRIVACY_FLAG[] =
2255          {
2256              {
2257                  0x01 |
2258                  //0x02 |
2259                  //0x04 |
2260                  //0x08 |
2261                  //0x10 |
2262                  //0x20 |
2263                  //0x40 |
2264                  //0x80 |
2265                  0x00
2266              },
2267              {
2268                  0x01 |
2269                  //0x02 |
2270                  0x00
2271              },
2272          };
2273          
2274          const uint8_t code ATT_PERMISSION_HDL_GAP_PERIPHERAL_PREFERRED_CONNECTION_PARAMETERS[] =
2275          {
2276              {
2277                  0x01 |
2278                  //0x02 |
2279                  //0x04 |
2280                  //0x08 |
2281                  //0x10 |
2282                  //0x20 |
2283                  //0x40 |
2284                  //0x80 |
2285                  0x00
2286              },
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 38  

2287              {
2288                  0x01 |
2289                  //0x02 |
2290                  0x00
2291              },
2292          };
2293          
2294          
2295          const uint8_t code ATT_PERMISSION_HDL_GATT_SERVICE_CHANGED_INIT[] =
2296          {
2297              {
2298                  0x01 |
2299                  //0x02 |
2300                  //0x04 |
2301                  //0x08 |
2302                  //0x10 |
2303                  //0x20 |
2304                  //0x40 |
2305                  //0x80 |
2306                  0x00
2307              },
2308              {
2309                  0x01 |
2310                  //0x02 |
2311                  0x00
2312              },
2313          };
2314          
2315          const uint8_t code ATT_PERMISSION_HDL_GATT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
2316          {
2317              {
2318                  0x01 |
2319                  0x02 |
2320                  //0x04 |
2321                  //0x08 |
2322                  //0x10 |
2323                  //0x20 |
2324                  //0x40 |
2325                  //0x80 |
2326                  0x00
2327              },
2328              {
2329                  0x01 |
2330                  //0x02 |
2331                  0x00
2332              },
2333          };
2334          
2335          
2336          const uint8_t code ATT_PERMISSION_HDL_DIS_SERIAL_NUMBER_STRING[] =
2337          {
2338              {
2339                  0x01 |
2340                  //0x02 |
2341                  //0x04 |
2342                  //0x08 |
2343                  //0x10 |
2344                  //0x20 |
2345                  //0x40 |
2346                  //0x80 |
2347                  0x00
2348              },
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 39  

2349              {
2350                  0x01 |
2351                  //0x02 |
2352                  0x00
2353              },
2354          };
2355          
2356          const uint8_t code ATT_PERMISSION_CHARACTERISTIC_PRESENTATION_FORMAT[] =
2357          {
2358              {
2359                  0x01 |
2360                  //0x02 |
2361                  //0x04 |
2362                  //0x08 |
2363                  //0x10 |
2364                  //0x20 |
2365                  //0x40 |
2366                  //0x80 |
2367                  0x00
2368              },
2369              {
2370                  0x01 |
2371                  //0x02 |
2372                  0x00
2373              },
2374          };
2375          
2376          const uint8_t code ATT_PERMISSION_HDL_DIS_MANUFACTURER_NAME_STRING[] =
2377          {
2378              {
2379                  0x01 |
2380                  //0x02 |
2381                  //0x04 |
2382                  //0x08 |
2383                  //0x10 |
2384                  //0x20 |
2385                  //0x40 |
2386                  //0x80 |
2387                  0x00
2388              },
2389              {
2390                  0x01 |
2391                  //0x02 |
2392                  0x00
2393              },
2394          };
2395          
2396          const uint8_t code ATT_PERMISSION_HDL_DIS_SYSTEM_ID[] =
2397          {
2398              {
2399                  0x01 |
2400                  //0x02 |
2401                  //0x04 |
2402                  //0x08 |
2403                  //0x10 |
2404                  //0x20 |
2405                  //0x40 |
2406                  //0x80 |
2407                  0x00
2408              },
2409              {
2410                  0x01 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 40  

2411                  //0x02 |
2412                  0x00
2413              },
2414          };
2415          
2416          const uint8_t code ATT_PERMISSION_HDL_DIS_FIRMWARE_REVISION_STRING[] =
2417          {
2418              {
2419                  0x01 |
2420                  //0x02 |
2421                  //0x04 |
2422                  //0x08 |
2423                  //0x10 |
2424                  //0x20 |
2425                  //0x40 |
2426                  //0x80 |
2427                  0x00
2428              },
2429              {
2430                  0x01 |
2431                  //0x02 |
2432                  0x00
2433              },
2434          };
2435          
2436          const uint8_t code ATT_PERMISSION_HDL_DIS_MODEL_NUMBER_STRING[] =
2437          {
2438              {
2439                  0x01 |
2440                  //0x02 |
2441                  //0x04 |
2442                  //0x08 |
2443                  //0x10 |
2444                  //0x20 |
2445                  //0x40 |
2446                  //0x80 |
2447                  0x00
2448              },
2449              {
2450                  0x01 |
2451                  //0x02 |
2452                  0x00
2453              },
2454          };
2455          
2456          const uint8_t code ATT_PERMISSION_HDL_DIS_HARDWARE_REVISION_STRING[] =
2457          {
2458              {
2459                  0x01 |
2460                  //0x02 |
2461                  //0x04 |
2462                  //0x08 |
2463                  //0x10 |
2464                  //0x20 |
2465                  //0x40 |
2466                  //0x80 |
2467                  0x00
2468              },
2469              {
2470                  0x01 |
2471                  //0x02 |
2472                  0x00
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 41  

2473              },
2474          };
2475          
2476          const uint8_t code ATT_PERMISSION_HDL_DIS_SOFTWARE_REVISION_STRING[] =
2477          {
2478              {
2479                  0x01 |
2480                  //0x02 |
2481                  //0x04 |
2482                  //0x08 |
2483                  //0x10 |
2484                  //0x20 |
2485                  //0x40 |
2486                  //0x80 |
2487                  0x00
2488              },
2489              {
2490                  0x01 |
2491                  //0x02 |
2492                  0x00
2493              },
2494          };
2495          
2496          const uint8_t code ATT_PERMISSION_HDL_DIS_PNP_ID[] =
2497          {
2498              {
2499                  0x01 |
2500                  //0x02 |
2501                  //0x04 |
2502                  //0x08 |
2503                  //0x10 |
2504                  //0x20 |
2505                  //0x40 |
2506                  //0x80 |
2507                  0x00
2508              },
2509              {
2510                  0x01 |
2511                  //0x02 |
2512                  0x00
2513              },
2514          };
2515          
2516          
2517          const uint8_t code ATT_PERMISSION_HDL_OTA_OTA_DATA_INIT[] =
2518          {
2519              {
2520                  //0x01 |
2521                  0x02 |
2522                  //0x04 |
2523                  //0x08 |
2524                  //0x10 |
2525                  //0x20 |
2526                  //0x40 |
2527                  //0x80 |
2528                  0x00
2529              },
2530              {
2531                  0x01 |
2532                  //0x02 |
2533                  0x00
2534              },
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 42  

2535          };
2536          
2537          const uint8_t code ATT_PERMISSION_HDL_OTA_OTA_DATA_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
2538          {
2539              {
2540                  0x01 |
2541                  0x02 |
2542                  //0x04 |
2543                  //0x08 |
2544                  //0x10 |
2545                  //0x20 |
2546                  //0x40 |
2547                  //0x80 |
2548                  0x00
2549              },
2550              {
2551                  0x01 |
2552                  //0x02 |
2553                  0x00
2554              },
2555          };
2556          
2557          const uint8_t code ATT_PERMISSION_HDL_OTA_OTA_DATA_DESCRIPTION[] =
2558          {
2559              {
2560                  0x01 |
2561                  //0x02 |
2562                  //0x04 |
2563                  //0x08 |
2564                  //0x10 |
2565                  //0x20 |
2566                  //0x40 |
2567                  //0x80 |
2568                  0x00
2569              },
2570              {
2571                  0x01 |
2572                  //0x02 |
2573                  0x00
2574              },
2575          };
2576          
2577          const uint8_t code ATT_PERMISSION_HDL_OTA_OTA_CMD_CONTROL_POINT_INIT[] =
2578          {
2579              {
2580                  //0x01 |
2581                  0x02 |
2582                  //0x04 |
2583                  //0x08 |
2584                  //0x10 |
2585                  //0x20 |
2586                  //0x40 |
2587                  //0x80 |
2588                  0x00
2589              },
2590              {
2591                  0x01 |
2592                  //0x02 |
2593                  0x00
2594              },
2595          };
2596          
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 43  

2597          const uint8_t code ATT_PERMISSION_HDL_OTA_OTA_CMD_CP_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
2598          {
2599              {
2600                  0x01 |
2601                  0x02 |
2602                  //0x04 |
2603                  //0x08 |
2604                  //0x10 |
2605                  //0x20 |
2606                  //0x40 |
2607                  //0x80 |
2608                  0x00
2609              },
2610              {
2611                  0x01 |
2612                  //0x02 |
2613                  0x00
2614              },
2615          };
2616          
2617          const uint8_t code ATT_PERMISSION_HDL_OTA_OTA_CMD_USER_DESCRIPTION[] =
2618          {
2619              {
2620                  0x01 |
2621                  //0x02 |
2622                  //0x04 |
2623                  //0x08 |
2624                  //0x10 |
2625                  //0x20 |
2626                  //0x40 |
2627                  //0x80 |
2628                  0x00
2629              },
2630              {
2631                  0x01 |
2632                  //0x02 |
2633                  0x00
2634              },
2635          };
2636          
2637          const uint8_t code ATT_PERMISSION_HDL_OTA_DATA_ERROR_STATUS_INIT[] =
2638          {
2639              {
2640                  //0x01 |
2641                  //0x02 |
2642                  //0x04 |
2643                  //0x08 |
2644                  //0x10 |
2645                  //0x20 |
2646                  //0x40 |
2647                  //0x80 |
2648                  0x00
2649              },
2650              {
2651                  0x01 |
2652                  //0x02 |
2653                  0x00
2654              },
2655          };
2656          
2657          const uint8_t code ATT_PERMISSION_HDL_OTA_DATA_ERROR_STATUS_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
2658          {
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 44  

2659              {
2660                  0x01 |
2661                  0x02 |
2662                  //0x04 |
2663                  //0x08 |
2664                  //0x10 |
2665                  //0x20 |
2666                  //0x40 |
2667                  //0x80 |
2668                  0x00
2669              },
2670              {
2671                  0x01 |
2672                  //0x02 |
2673                  0x00
2674              },
2675          };
2676          
2677          const uint8_t code ATT_PERMISSION_HDL_OTA_DATA_ERROR_STATUS_USER_DESCRIPTION[] =
2678          {
2679              {
2680                  0x01 |
2681                  //0x02 |
2682                  //0x04 |
2683                  //0x08 |
2684                  //0x10 |
2685                  //0x20 |
2686                  //0x40 |
2687                  //0x80 |
2688                  0x00
2689              },
2690              {
2691                  0x01 |
2692                  //0x02 |
2693                  0x00
2694              },
2695          };
2696          
2697          const uint8_t code ATT_PERMISSION_HDL_BAS_BATTERY_LEVEL_INIT[] =
2698          {
2699              {
2700                  0x01 |
2701                  //0x02 |
2702                  //0x04 |
2703                  //0x08 |
2704                  //0x10 |
2705                  //0x20 |
2706                  //0x40 |
2707                  //0x80 |
2708                  0x00
2709              },
2710              {
2711                  0x01 |
2712                  //0x02 |
2713                  0x00
2714              },
2715          };
2716          
2717          const uint8_t code ATT_PERMISSION_HDL_BAS_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
2718          {
2719              {
2720                  0x01 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 45  

2721                  0x02 |
2722                  //0x04 |
2723                  //0x08 |
2724                  //0x10 |
2725                  //0x20 |
2726                  //0x40 |
2727                  //0x80 |
2728                  0x00
2729              },
2730              {
2731                  0x01 |
2732                  //0x02 |
2733                  0x00
2734              },
2735          };
2736          
2737          #ifdef _PROFILE_HOGP_
              const uint8_t code ATT_PERMISSION_HDL_HIDS_HID_INFORMATION[] =
              {
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_HIDS_HID_CONTROL_POINT_INIT[] =
              {
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_HIDS_REPORT_MAP[] =
              {
                  {
                      //0x01 |
                      //0x02 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 46  

                      //0x04 |
                      //0x08 |
                      0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_HIDS_REPORT_INIT[] =
              {
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      0x10 |
                      0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_HIDS_REPORT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  {
                      0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_HIDS_REPORT_REPORT_REFERENCE[] =
              {
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 47  

                      0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              #ifdef _PROFILE_HOGP_MOUSE_
              const uint8_t code ATT_PERMISSION_HDL_HIDS_REPORT1_USER_DESCRIPTION[] =
              {
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              #endif    //_PROFILE_HOGP_MOUSE_
              
              const uint8_t code ATT_PERMISSION_HDL_HIDS_PROTOCOL_MODE_INIT[] =
              {
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      0x10 |
                      0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_HIDS_REPORT1_INIT[] =
              {
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 48  

                      0x10 |
                      0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_HIDS_REPORT1_REPORT_REFERENCE[] =
              {
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              #endif    //ifdef _PROFILE_HOGP_
2941          
2942          #ifdef _PROFILE_TAOBAO_
              const uint8_t code ATT_PERMISSION_HDL_TAOBAO_DATW[] =
              {
                  {
                      //0x01 |
                      0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_TAOBAO_DATI_INIT[] =
              {
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 49  

                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_TAOBAO_DATI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  {
                      0x01 |
                      0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              #endif    //_PROFILE_TAOBAO_
3003          
3004          #ifdef _PROFILE_WECHAT_
              const uint8_t code ATT_PERMISSION_HDL_WECHAT_DATW[] =
              {
                  {
                      //0x01 |
                      0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_WECHAT_DATI_INIT[] =
              {
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 50  

                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_WECHAT_DATI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  {
                      0x01 |
                      0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_WECHAT_DATR[] =
              {
                  {
                      0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              #ifdef _PROFILE_WECHAT_SIMPLE_MODE_
              const uint8_t code ATT_PERMISSION_HDL_WECHAT_SIMPLEMODE_DATRI_INIT[] =
              {
                  {
                      0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 51  

                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x04  |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_WECHAT_SIMPLEMODE_DATRI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  {
                      0x01 |
                      0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_WECHAT_SIMPLEMODE_DATRWI_INIT[] =
              {
                  {
                      0x01 |
                      0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x04  |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_WECHAT_SIMPLEMODE_DATRWI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] 
             -=
              {
                  {
                      0x01 |
                      0x02 |
                      //0x04 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 52  

                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              #endif    //_PROFILE_WECHAT_SIMPLE_MODE_
              #endif    //_PROFILE_WECHAT_
3170          
3171          #ifdef _PROFILE_USER_DEFINE_01_
3172          const uint8_t code ATT_PERMISSION_HDL_USER_DEFINE_01_DATAN01_INIT[] =
3173          {
3174              {
3175                  0x01 |
3176                  //0x02 |
3177                  //0x04 |
3178                  //0x08 |
3179                  //0x10 |
3180                  //0x20 |
3181                  //0x40 |
3182                  //0x80 |
3183                  0x00
3184              },
3185              {
3186                  0x01 |
3187                  //0x02 |
3188                  0x00
3189              },
3190          };
3191          
3192          const uint8_t code ATT_PERMISSION_HDL_USER_DEFINE_01_DATAN01_CLIENT_CHARACT_CONFIG_INIT[] =
3193          {
3194              {
3195                  0x01 |
3196                  0x02 |
3197                  //0x04 |
3198                  //0x08 |
3199                  //0x10 |
3200                  //0x20 |
3201                  //0x40 |
3202                  //0x80 |
3203                  0x00
3204              },
3205              {
3206                  0x01 |
3207                  //0x02 |
3208                  0x00
3209              },
3210          };
3211          
3212          const uint8_t code ATT_PERMISSION_HDL_USER_DEFINE_01_DATAW01_INIT[] =
3213          {
3214              {
3215                  //0x01 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 53  

3216                  0x02 |
3217                  //0x04 |
3218                  //0x08 |
3219                  //0x10 |
3220                  //0x20 |
3221                  //0x40 |
3222                  //0x80 |
3223                  0x00
3224              },
3225              {
3226                  0x01 |
3227                  //0x02 |
3228                  0x00
3229              },
3230          };
3231          
3232          const uint8_t code ATT_PERMISSION_HDL_USER_DEFINE_01_DATAN02_INIT[] =
3233          {
3234              {
3235                  0x01 |
3236                  //0x02 |
3237                  //0x04 |
3238                  //0x08 |
3239                  //0x10 |
3240                  //0x20 |
3241                  //0x40 |
3242                  //0x80 |
3243                  0x00
3244              },
3245              {
3246                  0x01 |
3247                  //0x02 |
3248                  0x00
3249              },
3250          };
3251          
3252          const uint8_t code ATT_PERMISSION_HDL_USER_DEFINE_01_DATAN02_CLIENT_CHARACT_CONFIG_INIT[] =
3253          {
3254              {
3255                  0x01 |
3256                  0x02 |
3257                  //0x04 |
3258                  //0x08 |
3259                  //0x10 |
3260                  //0x20 |
3261                  //0x40 |
3262                  //0x80 |
3263                  0x00
3264              },
3265              {
3266                  0x01 |
3267                  //0x02 |
3268                  0x00
3269              },
3270          };
3271          
3272          const uint8_t code ATT_PERMISSION_HDL_USER_DEFINE_01_DATAW02_INIT[] =
3273          {
3274              {
3275                  //0x01 |
3276                  0x02 |
3277                  //0x04 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 54  

3278                  //0x08 |
3279                  //0x10 |
3280                  //0x20 |
3281                  //0x40 |
3282                  //0x80 |
3283                  0x00
3284              },
3285              {
3286                  0x01 |
3287                  //0x02 |
3288                  0x00
3289              },
3290          };
3291          
3292          const uint8_t code ATT_PERMISSION_HDL_USER_DEFINE_01_DATAR01[] =
3293          {
3294              {
3295                  0x01 |
3296                  //0x02 |
3297                  //0x04 |
3298                  //0x08 |
3299                  //0x10 |
3300                  //0x20 |
3301                  //0x40 |
3302                  //0x80 |
3303                  0x00
3304              },
3305              {
3306                  0x01 |
3307                  //0x02 |
3308                  0x00
3309              },
3310          };
3311          #endif    //_PROFILE_USER_DEFINE_01_
3312          
3313          #ifdef _PROFILE_GLS_
              const uint8_t code ATT_PERMISSION_HDL_GLS_GLUCOSE_MEASUREMENT_INIT[] =
              {
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_GLS_GLUCOSE_MEASUREMENT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT[] =
              {
                  {
                      0x01 |
                      //0x02 |
                      //0x04 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 55  

                      //0x08 |
                      //0x10 |
                      0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_GLS_GLUCOSE_MEASUREMENT_CONTEXT_INIT[] =
              {
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_GLS_GLUCOSE_MEASUREMENT_CONTEXT_CLIENT_CHARACTERISTIC_CONFIGURATION_
             -INIT[] =
              {
                  {
                      0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_GLS_GLUCOSE_FEATURE_INIT[] =
              {
                  {
                      0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 56  

                      //0x10 |
                      //0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_GLS_RECORD_ACCESS_CONTROL_POINT_INIT[] =
              {
                  {
                      //0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              
              const uint8_t code ATT_PERMISSION_HDL_GLS_RECORD_ACCESS_CONTROL_POINT_CLIENT_CHARACTERISTIC_CONFIGURATION_
             -INIT[] =
              {
                  {
                      0x01 |
                      //0x02 |
                      //0x04 |
                      //0x08 |
                      //0x10 |
                      0x20 |
                      //0x40 |
                      //0x80 |
                      0x00
                  },
                  {
                      0x01 |
                      //0x02 |
                      0x00
                  },
              };
              #endif  //_PROFILE_GLS_
3454          
3455          code uint8_t code *ATTRIBUTE_SERVER[SIZE_ATTRIBUTE_SERVER] =
3456          {
3457              ATT_HDL_INVALID,
3458              ATT_HDL_GAP_PRIMARY_SERVICE,
3459              ATT_HDL_GAP_CHARACTERISTIC_DEVICE_NAME,
3460              ATT_HDL_GAP_DEVICE_NAME_INIT,
3461              ATT_HDL_GAP_CHARACTERISTIC_APPEARANCE,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 57  

3462              ATT_HDL_GAP_APPEARANCE,
3463              ATT_HDL_GAP_CHARACTERISTIC_RECONNECTION_ADDRESS,
3464              ATT_HDL_GAP_RECONNECTION_ADDRESS_INIT,
3465              ATT_HDL_GAP_CHARACTERISTIC_PERIPHERAL_PRIVACY_FLAG,
3466              ATT_HDL_GAP_PERIPHERAL_PRIVACY_FLAG,
3467              ATT_HDL_GAP_CHARACTERISTIC_PERIPHERAL_PREFERRED_CONNECTION_PARAMETERS,
3468              ATT_HDL_GAP_PERIPHERAL_PREFERRED_CONNECTION_PARAMETERS,
3469              ATT_HDL_GATT_PRIMARY_SERVICE,
3470              ATT_HDL_GATT_CHARACTERISTIC_SERVICE_CHANGED,
3471              ATT_HDL_GATT_SERVICE_CHANGED_INIT,
3472              ATT_HDL_GATT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
3473              ATT_HDL_DIS_PRIMARY_SERVICE,
3474              ATT_HDL_DIS_CHARACTERISTIC_SERIAL_NUMBER_STRING,
3475              ATT_HDL_DIS_SERIAL_NUMBER_STRING,
3476              ATT_HDL_DIS_SERIAL_NUMBER_STRING_PRESENTATION_FORMAT,
3477              ATT_HDL_DIS_CHARACTERISTIC_MANUFACTURER_NAME_STRING,
3478              ATT_HDL_DIS_MANUFACTURER_NAME_STRING,
3479              ATT_HDL_DIS_MANUFACTURER_NAME_STRING_PRESENTATION_FORMAT,
3480              ATT_HDL_DIS_CHARACTERISTIC_SYSTEM_ID,
3481              ATT_HDL_DIS_SYSTEM_ID,
3482              ATT_HDL_DIS_CHARACTERISTIC_FIRMWARE_REVISION_STRING,
3483              ATT_HDL_DIS_FIRMWARE_REVISION_STRING,
3484              ATT_HDL_DIS_FIRMWARE_REVISION_STRING_PRESENTATION_FORMAT,
3485              ATT_HDL_DIS_CHARACTERISTIC_MODEL_NUMBER_STRING,
3486              ATT_HDL_DIS_MODEL_NUMBER_STRING,
3487              ATT_HDL_DIS_MODEL_NUMBER_STRING_PRESENTATION_FORMAT,
3488              ATT_HDL_DIS_CHARACTERISTIC_HARDWARE_REVISION_STRING,
3489              ATT_HDL_DIS_HARDWARE_REVISION_STRING,
3490              ATT_HDL_DIS_HARDWARE_REVISION_STRING_PRESENTATION_FORMAT,
3491              ATT_HDL_DIS_CHARACTERISTIC_SOFTWARE_REVISION_STRING,
3492              ATT_HDL_DIS_SOFTWARE_REVISION_STRING,
3493              ATT_HDL_DIS_SOFTWARE_REVISION_STRING_PRESENTATION_FORMAT,
3494              ATT_HDL_DIS_CHARACTERISTIC_PNP_ID,
3495              ATT_HDL_DIS_PNP_ID,
3496              ATT_HDL_OTA_PRIMARY_SERVICE,
3497              ATT_HDL_OTA_CHARACTERISTIC_OTA_DATA,
3498              ATT_HDL_OTA_OTA_DATA_INIT,
3499              ATT_HDL_OTA_OTA_DATA_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
3500              ATT_HDL_OTA_OTA_DATA_DESCRIPTION,
3501              ATT_HDL_OTA_CHARACTERISTIC_OTA_CMD_CONTROL_POINT,
3502              ATT_HDL_OTA_OTA_CMD_CONTROL_POINT_INIT,
3503              ATT_HDL_OTA_OTA_CMD_CONTROL_POINT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
3504              ATT_HDL_OTA_OTA_CMD_USER_DESCRIPTION,
3505              ATT_HDL_OTA_CHARACTERISTIC_OTA_DATA_ERROR_STATUS,
3506              ATT_HDL_OTA_DATA_ERROR_STATUS_INIT,
3507              ATT_HDL_OTA_DATA_ERROR_STATUS_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
3508              ATT_HDL_OTA_DATA_ERROR_STATUS_USER_DESCRIPTION,
3509              ATT_HDL_BAS_PRIMARY_SERVICE,
3510              ATT_HDL_BAS_CHARACTERISTIC_BATTERY_LEVEL,
3511              ATT_HDL_BAS_BATTERY_LEVEL_INIT,
3512              ATT_HDL_BAS_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
3513          
3514          #ifdef _PROFILE_HOGP_
                  ATT_HDL_HIDS_PRIMARY_SERVICE,
                  ATT_HDL_HIDS_CHARACTERISTIC_HID_INFORMATION,
                  ATT_HDL_HIDS_HID_INFORMATION,
                  ATT_HDL_HIDS_CHARACTERISTIC_HID_CONTROL_POINT,
                  ATT_HDL_HIDS_HID_CONTROL_POINT_INIT,
                  ATT_HDL_HIDS_CHARACTERISTIC_REPORT_MAP,
                  ATT_HDL_HIDS_REPORT_MAP,
              #ifdef _PROFILE_HOGP_KEYBOARD_
                  ATT_HDL_HIDS_CHARACTERISTIC_REPORT_KBI,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 58  

                  ATT_HDL_HIDS_REPORT_KBI_INIT,
                  ATT_HDL_HIDS_REPORT_KBI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
                  ATT_HDL_HIDS_REPORT_KBI_REPORT_REFERENCE,
                  ATT_HDL_HIDS_CHARACTERISTIC_REPORT_KBO,
                  ATT_HDL_HIDS_REPORT_KBO_INIT,
                  ATT_HDL_HIDS_REPORT_KBO_REPORT_REFERENCE,
              #endif
              #ifdef _PROFILE_HOGP_MOUSE_
                  ATT_HDL_HIDS_CHARACTERISTIC_REPORT_MSI,
                  ATT_HDL_HIDS_REPORT_MSI_INIT,
                  ATT_HDL_HIDS_REPORT_MSI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
                  ATT_HDL_HIDS_REPORT_MSI_REPORT_REFERENCE,
                  ATT_HDL_HIDS_CHARACTERISTIC_REPORT_MSF,
                  ATT_HDL_HIDS_REPORT_MSF_INIT,
                  ATT_HDL_HIDS_REPORT_MSF_REPORT_REFERENCE,
                  ATT_HDL_HIDS_REPORT_MSF_USER_DESCRIPTION,
              #endif
              #ifdef _PROFILE_HOGP_COMSUMER_
                  ATT_HDL_HIDS_CHARACTERISTIC_REPORT_CSI,
                  ATT_HDL_HIDS_REPORT_CSI_INIT,
                  ATT_HDL_HIDS_REPORT_CSI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
                  ATT_HDL_HIDS_REPORT_CSI_REPORT_REFERENCE,
              #endif
                  ATT_HDL_HIDS_CHARACTERISTIC_PROTOCOL_MODE,
                  ATT_HDL_HIDS_PROTOCOL_MODE_INIT,
              #endif
3550          
3551          ////////////////////////TaoBao//////////////////////////////////
3552          #ifdef _PROFILE_TAOBAO_
                  ATT_HDL_TAOBAO_PRIMARY_SERVICE,
                  ATT_HDL_TAOBAO_CHARACTERISTIC_DATW,
                  ATT_HDL_TAOBAO_DATW_INIT,
                  ATT_HDL_TAOBAO_CHARACTERISTIC_DATI,
                  ATT_HDL_TAOBAO_DATI_INIT,
                  ATT_HDL_TAOBAO_DATI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
              #endif
3560          ////////////////////////TaoBao//////////////////////////////////
3561          
3562          ////////////////////////WeChat//////////////////////////////////
3563          #ifdef _PROFILE_WECHAT_
                  ATT_HDL_WECHAT_PRIMARY_SERVICE,
                  ATT_HDL_WECHAT_CHARACTERISTIC_DATW,
                  ATT_HDL_WECHAT_DATW_INIT,
                  ATT_HDL_WECHAT_CHARACTERISTIC_DATI,
                  ATT_HDL_WECHAT_DATI_INIT,
                  ATT_HDL_WECHAT_DATI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
                  ATT_HDL_WECHAT_CHARACTERISTIC_DATR,
                  ATT_HDL_WECHAT_DATR,
              /////////////////////Simple mode current pedometer measurement///
              #ifdef _PROFILE_WECHAT_SIMPLE_MODE_
                  ATT_HDL_WECHAT_SIMPLEMODE_CHARACTERISTIC_DATRI,
                  ATT_HDL_WECHAT_SIMPLEMODE_DATRI_INIT,
                  ATT_HDL_WECHAT_SIMPLEMODE_DATRI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
              /////////////////////Simple mode current pedometer measurement///
              /////////////////////Simple mode target//////////////////////////
                  ATT_HDL_WECHAT_SIMPLEMODE_CHARACTERISTIC_DATRWI,
                  ATT_HDL_WECHAT_SIMPLEMODE_DATRWI_INIT,
                  ATT_HDL_WECHAT_SIMPLEMODE_DATRWI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
              #endif
              /////////////////////Simple mode target/////////////////////////
              #endif
3585          ////////////////////////WeChat//////////////////////////////////
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 59  

3586          
3587          ////////////////////////6UUID//////////////////////////////////
3588          #ifdef _PROFILE_USER_DEFINE_01_
3589              ATT_HDL_USER_DEFINE_01_PRIMARY_SERVICE,
3590              ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAN01,
3591              ATT_HDL_USER_DEFINE_01_DATAN01_INIT,
3592              ATT_HDL_USER_DEFINE_01_DATAN01_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
3593              ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAW01,
3594              ATT_HDL_USER_DEFINE_01_DATAW01_INIT,
3595              ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAN02,
3596              ATT_HDL_USER_DEFINE_01_DATAN02_INIT,
3597              ATT_HDL_USER_DEFINE_01_DATAN02_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
3598              ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAW02,
3599              ATT_HDL_USER_DEFINE_01_DATAW02_INIT,
3600              ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAR01,
3601              ATT_HDL_USER_DEFINE_01_DATAR01,
3602          #endif
3603          ////////////////////////6UUID//////////////////////////////////
3604          
3605          ////////////////////////GLS////////////////////////////////////
3606           #ifdef _PROFILE_GLS_
                  ATT_HDL_GLS_PRIMARY_SERVICE,
                  ATT_HDL_GLS_CHARACTERISTIC_GLUCOSE_MEASUREMENT,
                  ATT_HDL_GLS_GLUCOSE_MEASUREMENT_INIT,
                  ATT_HDL_GLS_GLUCOSE_MEASUREMENT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
                  ATT_HDL_GLS_CHARACTERISTIC_GLUCOSE_MEASUREMENT_CONTEXT,
                  ATT_HDL_GLS_GLUCOSE_MEASUREMENT_CONTEXT_INIT,
                  ATT_HDL_GLS_GLUCOSE_MEASUREMENT_CONTEXT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
                  ATT_HDL_GLS_CHARACTERISTIC_GLUCOSE_FEATURE,
                  ATT_HDL_GLS_GLUCOSE_FEATURE_INIT,
                  ATT_HDL_GLS_CHARACTERISTIC_RECORD_ACCESS_CONTROL_POINT,
                  ATT_HDL_GLS_RECORD_ACCESS_CONTROL_POINT_INIT,
                  ATT_HDL_GLS_RECORD_ACCESS_CONTROL_POINT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
              #endif
3620          ////////////////////////GLS////////////////////////////////////
3621          };
3622          
3623          
3624          
3625          code uint8_t *ATTRIBUTE_SERVER_param[SIZE_ATTRIBUTE_SERVER] =
3626          {
3627                  &ATT_HDL_INVALID[5],
3628                  &ATT_HDL_GAP_PRIMARY_SERVICE[5],
3629                  &ATT_HDL_GAP_CHARACTERISTIC_DEVICE_NAME[5],
3630              att_HDL_GAP_DEVICE_NAME,
3631                  &ATT_HDL_GAP_CHARACTERISTIC_APPEARANCE[5],
3632                  &ATT_HDL_GAP_APPEARANCE[5],
3633                  &ATT_HDL_GAP_CHARACTERISTIC_RECONNECTION_ADDRESS[5],
3634              att_HDL_GAP_RECONNECTION_ADDRESS,
3635                  &ATT_HDL_GAP_CHARACTERISTIC_PERIPHERAL_PRIVACY_FLAG[5],
3636                  &ATT_HDL_GAP_PERIPHERAL_PRIVACY_FLAG[5],
3637                  &ATT_HDL_GAP_CHARACTERISTIC_PERIPHERAL_PREFERRED_CONNECTION_PARAMETERS[5],
3638                  &ATT_HDL_GAP_PERIPHERAL_PREFERRED_CONNECTION_PARAMETERS[5],
3639                  &ATT_HDL_GATT_PRIMARY_SERVICE[5],
3640                  &ATT_HDL_GATT_CHARACTERISTIC_SERVICE_CHANGED[5],
3641              att_HDL_GATT_SERVICE_CHANGED,
3642              att_HDL_GATT_CLIENT_CHARACTERISTIC_CONFIGURATION,
3643                  &ATT_HDL_DIS_PRIMARY_SERVICE[5],
3644                  &ATT_HDL_DIS_CHARACTERISTIC_SERIAL_NUMBER_STRING[5],
3645                  &ATT_HDL_DIS_SERIAL_NUMBER_STRING[5],
3646                  &ATT_HDL_DIS_SERIAL_NUMBER_STRING_PRESENTATION_FORMAT[5],
3647                  &ATT_HDL_DIS_CHARACTERISTIC_MANUFACTURER_NAME_STRING[5],
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 60  

3648                  &ATT_HDL_DIS_MANUFACTURER_NAME_STRING[5],
3649                  &ATT_HDL_DIS_MANUFACTURER_NAME_STRING_PRESENTATION_FORMAT[5],
3650                  &ATT_HDL_DIS_CHARACTERISTIC_SYSTEM_ID[5],
3651                  &ATT_HDL_DIS_SYSTEM_ID[5],
3652                  &ATT_HDL_DIS_CHARACTERISTIC_FIRMWARE_REVISION_STRING[5],
3653                  &ATT_HDL_DIS_FIRMWARE_REVISION_STRING[5],
3654                  &ATT_HDL_DIS_FIRMWARE_REVISION_STRING_PRESENTATION_FORMAT[5],
3655                  &ATT_HDL_DIS_CHARACTERISTIC_MODEL_NUMBER_STRING[5],
3656                  &ATT_HDL_DIS_MODEL_NUMBER_STRING[5],
3657                  &ATT_HDL_DIS_MODEL_NUMBER_STRING_PRESENTATION_FORMAT[5],
3658                  &ATT_HDL_DIS_CHARACTERISTIC_HARDWARE_REVISION_STRING[5],
3659                  &ATT_HDL_DIS_HARDWARE_REVISION_STRING[5],
3660                  &ATT_HDL_DIS_HARDWARE_REVISION_STRING_PRESENTATION_FORMAT[5],
3661                  &ATT_HDL_DIS_CHARACTERISTIC_SOFTWARE_REVISION_STRING[5],
3662                  &ATT_HDL_DIS_SOFTWARE_REVISION_STRING[5],
3663                  &ATT_HDL_DIS_SOFTWARE_REVISION_STRING_PRESENTATION_FORMAT[5],
3664                  &ATT_HDL_DIS_CHARACTERISTIC_PNP_ID[5],
3665                  &ATT_HDL_DIS_PNP_ID[5],
3666                  &ATT_HDL_OTA_PRIMARY_SERVICE[5],
3667                  &ATT_HDL_OTA_CHARACTERISTIC_OTA_DATA[5],
3668              att_HDL_OTA_OTA_DATA,
3669              att_HDL_OTA_OTA_DATA_CLIENT_CHARACTERISTIC_CONFIGURATION,
3670                  &ATT_HDL_OTA_OTA_DATA_DESCRIPTION[5],
3671                  &ATT_HDL_OTA_CHARACTERISTIC_OTA_CMD_CONTROL_POINT[5],
3672              att_HDL_OTA_OTA_CMD_CONTROL_POINT,
3673              att_HDL_OTA_OTA_CMD_CONTROL_POINT_CLIENT_CHARACTERISTIC_CONFIGURATION,
3674                  &ATT_HDL_OTA_OTA_CMD_USER_DESCRIPTION[5],
3675                  &ATT_HDL_OTA_CHARACTERISTIC_OTA_DATA_ERROR_STATUS[5],
3676              att_HDL_OTA_DATA_ERROR_STATUS,
3677              att_HDL_OTA_DATA_ERROR_STATUS_CLIENT_CHARACTERISTIC_CONFIGURATION,
3678                  &ATT_HDL_OTA_DATA_ERROR_STATUS_USER_DESCRIPTION[5],
3679                  &ATT_HDL_BAS_PRIMARY_SERVICE[5],
3680                  &ATT_HDL_BAS_CHARACTERISTIC_BATTERY_LEVEL[5],
3681              att_HDL_BAS_BATTERY_LEVEL,
3682              att_HDL_BAS_CLIENT_CHARACTERISTIC_CONFIGURATION,
3683          
3684          #ifdef _PROFILE_HOGP_
                      &ATT_HDL_HIDS_PRIMARY_SERVICE[5],
                      &ATT_HDL_HIDS_CHARACTERISTIC_HID_INFORMATION[5],
                      &ATT_HDL_HIDS_HID_INFORMATION[5],
                      &ATT_HDL_HIDS_CHARACTERISTIC_HID_CONTROL_POINT[5],
                  att_HDL_HIDS_HID_CONTROL_POINT,
                      &ATT_HDL_HIDS_CHARACTERISTIC_REPORT_MAP[5],
                      &ATT_HDL_HIDS_REPORT_MAP[5],
              #ifdef _PROFILE_HOGP_KEYBOARD_
                      &ATT_HDL_HIDS_CHARACTERISTIC_REPORT_KBI[5],
                  att_HDL_HIDS_REPORT_KBI,
                  att_HDL_HIDS_REPORT_KBI_CLIENT_CHARACTERISTIC_CONFIGURATION,
                      &ATT_HDL_HIDS_REPORT_KBI_REPORT_REFERENCE[5],
                      &ATT_HDL_HIDS_CHARACTERISTIC_REPORT_KBO[5],
                  att_HDL_HIDS_REPORT_KBO,
                      &ATT_HDL_HIDS_REPORT_KBO_REPORT_REFERENCE[5],
              #endif
              #ifdef _PROFILE_HOGP_MOUSE_
                      &ATT_HDL_HIDS_CHARACTERISTIC_REPORT_MSI[5],
                  att_HDL_HIDS_REPORT_MSI,
                  att_HDL_HIDS_REPORT_MSI_CLIENT_CHARACTERISTIC_CONFIGURATION,
                      &ATT_HDL_HIDS_REPORT_MSI_REPORT_REFERENCE[5],
                      &ATT_HDL_HIDS_CHARACTERISTIC_REPORT_MSF[5],
                  att_HDL_HIDS_REPORT_MSF,
                      &ATT_HDL_HIDS_REPORT_MSF_REPORT_REFERENCE[5],
                      &ATT_HDL_HIDS_REPORT_MSF_USER_DESCRIPTION[5],
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 61  

              #endif
              #ifdef _PROFILE_HOGP_COMSUMER_
                      &ATT_HDL_HIDS_CHARACTERISTIC_REPORT_CSI[5],
                  att_HDL_HIDS_REPORT_CSI,
                  att_HDL_HIDS_REPORT_CSI_CLIENT_CHARACTERISTIC_CONFIGURATION,
                      &ATT_HDL_HIDS_REPORT_CSI_REPORT_REFERENCE[5],
              #endif
                      &ATT_HDL_HIDS_CHARACTERISTIC_PROTOCOL_MODE[5],
                  att_HDL_HIDS_PROTOCOL_MODE,
              #endif
3720          
3721          ////////////////////////TaoBao//////////////////////////////////
3722          #ifdef _PROFILE_TAOBAO_
                      &ATT_HDL_TAOBAO_PRIMARY_SERVICE[5],
                      &ATT_HDL_TAOBAO_CHARACTERISTIC_DATW[5],
                      att_HDL_TAOBAO_DATW,
                      &ATT_HDL_TAOBAO_CHARACTERISTIC_DATI[5],
                  att_HDL_TAOBAO_DATI,
                  att_HDL_TAOBAO_DATI_MEASUREMENT_CLIENT_CHARACTERISTIC_CONFIGURATION,
              #endif
3730          ////////////////////////TaoBao//////////////////////////////////
3731          
3732          ////////////////////////WeChat//////////////////////////////////
3733          #ifdef _PROFILE_WECHAT_
                      &ATT_HDL_WECHAT_PRIMARY_SERVICE[5],
                      &ATT_HDL_WECHAT_CHARACTERISTIC_DATW[5],
                      att_HDL_WECHAT_DATW,
                      &ATT_HDL_WECHAT_CHARACTERISTIC_DATI[5],
                  att_HDL_WECHAT_DATI,
                  att_HDL_WECHAT_DATI_MEASUREMENT_CLIENT_CHARACTERISTIC_CONFIGURATION,
                      &ATT_HDL_WECHAT_CHARACTERISTIC_DATR[5],
                      &ATT_HDL_WECHAT_DATR[5],
              /////////////////////Simple mode current pedometer measurement///
              #ifdef _PROFILE_WECHAT_SIMPLE_MODE_
                      &ATT_HDL_WECHAT_SIMPLEMODE_CHARACTERISTIC_DATRI[5],
                  att_HDL_WECHAT_SIMPLEMODE_DATRI,
                  att_HDL_WECHAT_SIMPLEMODE_DATRI_CLIENT_CHARACTERISTIC_CONFIGURATION,
              /////////////////////Simple mode current pedometer measurement///
              /////////////////////Simple mode target//////////////////////////
                      &ATT_HDL_WECHAT_SIMPLEMODE_CHARACTERISTIC_DATRWI[5],
                  att_HDL_WECHAT_SIMPLEMODE_DATRWI,
                  att_HDL_WECHAT_SIMPLEMODE_DATRWI_CLIENT_CHARACTERISTIC_CONFIGURATION,
              #endif
              /////////////////////Simple mode target/////////////////////////
              #endif
3755          ////////////////////////WeChat//////////////////////////////////
3756          
3757          ////////////////////////6UUID//////////////////////////////////
3758          #ifdef _PROFILE_USER_DEFINE_01_
3759                  &ATT_HDL_USER_DEFINE_01_PRIMARY_SERVICE[5],
3760                  &ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAN01[5],
3761              att_HDL_USER_DEFINE_01_DATAN01,
3762              att_HDL_USER_DEFINE_01_DATAN01_CLIENT_CHARACTERISTIC_CONFIGURATION,
3763                  &ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAW01[5],
3764              att_HDL_USER_DEFINE_01_DATAW01,
3765                  &ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAN02[5],
3766              att_HDL_USER_DEFINE_01_DATAN02,
3767              att_HDL_USER_DEFINE_01_DATAN02_CLIENT_CHARACTERISTIC_CONFIGURATION,
3768                  &ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAW02[5],
3769              att_HDL_USER_DEFINE_01_DATAW02,
3770                  &ATT_HDL_USER_DEFINE_01_CHARACTERISTIC_DATAR01[5],
3771                  &ATT_HDL_USER_DEFINE_01_DATAR01[5],
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 62  

3772          #endif
3773          ////////////////////////6UUID//////////////////////////////////
3774          
3775          ////////////////////////GLS////////////////////////////////////
3776           #ifdef _PROFILE_GLS_
                       &ATT_HDL_GLS_PRIMARY_SERVICE[5],
                       &ATT_HDL_GLS_CHARACTERISTIC_GLUCOSE_MEASUREMENT[5],
                   att_HDL_GLS_GLUCOSE_MEASUREMENT,
                   att_HDL_GLS_GLUCOSE_MEASUREMENT_CLIENT_CHARACTERISTIC_CONFIGURATION,
                       &ATT_HDL_GLS_CHARACTERISTIC_GLUCOSE_MEASUREMENT_CONTEXT[5],
                   att_HDL_GLS_GLUCOSE_MEASUREMENT_CONTEXT,
                   att_HDL_GLS_GLUCOSE_MEASUREMENT_CONTEXT_CLIENT_CHARACTERISTIC_CONFIGURATION,
                       &ATT_HDL_GLS_CHARACTERISTIC_GLUCOSE_FEATURE[5],
                       &ATT_HDL_GLS_GLUCOSE_FEATURE_INIT[5],
                       &ATT_HDL_GLS_CHARACTERISTIC_RECORD_ACCESS_CONTROL_POINT[5],
                   att_HDL_GLS_RECORD_ACCESS_CONTROL_POINT,
                   att_HDL_GLS_RECORD_ACCESS_CONTROL_POINT_CLIENT_CHARACTERISTIC_CONFIGURATION,
               #endif
3790          ////////////////////////GLS////////////////////////////////////
3791          
3792          };
3793          
3794          
3795          code uint8_t code *ATTRIBUTE_SERVER_PERMISSION[SIZE_ATTRIBUTE_SERVER] =
3796          {
3797              ATT_PERMISSION_NULL,
3798              ATT_PERMISSION_PRIMARY_SERVICE,
3799              ATT_PERMISSION_CHARACTERISTIC,
3800              ATT_PERMISSION_HDL_GAP_DEVICE_NAME_INIT,
3801              ATT_PERMISSION_CHARACTERISTIC,
3802              ATT_PERMISSION_HDL_GAP_APPEARANCE,
3803              ATT_PERMISSION_CHARACTERISTIC,
3804              ATT_PERMISSION_HDL_GAP_RECONNECTION_ADDRESS_INIT,
3805              ATT_PERMISSION_CHARACTERISTIC,
3806              ATT_PERMISSION_HDL_GAP_PERIPHERAL_PRIVACY_FLAG,
3807              ATT_PERMISSION_CHARACTERISTIC,
3808              ATT_PERMISSION_HDL_GAP_PERIPHERAL_PREFERRED_CONNECTION_PARAMETERS,
3809              ATT_PERMISSION_PRIMARY_SERVICE,
3810              ATT_PERMISSION_CHARACTERISTIC,
3811              ATT_PERMISSION_HDL_GATT_SERVICE_CHANGED_INIT,
3812              ATT_PERMISSION_HDL_GATT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
3813              ATT_PERMISSION_PRIMARY_SERVICE,
3814              ATT_PERMISSION_CHARACTERISTIC,
3815              ATT_PERMISSION_HDL_DIS_SERIAL_NUMBER_STRING,
3816              ATT_PERMISSION_CHARACTERISTIC_PRESENTATION_FORMAT,
3817              ATT_PERMISSION_CHARACTERISTIC,
3818              ATT_PERMISSION_HDL_DIS_MANUFACTURER_NAME_STRING,
3819              ATT_PERMISSION_CHARACTERISTIC_PRESENTATION_FORMAT,
3820              ATT_PERMISSION_CHARACTERISTIC,
3821              ATT_PERMISSION_HDL_DIS_SYSTEM_ID,
3822              ATT_PERMISSION_CHARACTERISTIC,
3823              ATT_PERMISSION_HDL_DIS_FIRMWARE_REVISION_STRING,
3824              ATT_PERMISSION_CHARACTERISTIC_PRESENTATION_FORMAT,
3825              ATT_PERMISSION_CHARACTERISTIC,
3826              ATT_PERMISSION_HDL_DIS_MODEL_NUMBER_STRING,
3827              ATT_PERMISSION_CHARACTERISTIC_PRESENTATION_FORMAT,
3828              ATT_PERMISSION_CHARACTERISTIC,
3829              ATT_PERMISSION_HDL_DIS_HARDWARE_REVISION_STRING,
3830              ATT_PERMISSION_CHARACTERISTIC_PRESENTATION_FORMAT,
3831              ATT_PERMISSION_CHARACTERISTIC,
3832              ATT_PERMISSION_HDL_DIS_SOFTWARE_REVISION_STRING,
3833              ATT_PERMISSION_CHARACTERISTIC_PRESENTATION_FORMAT,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 63  

3834              ATT_PERMISSION_CHARACTERISTIC,
3835              ATT_PERMISSION_HDL_DIS_PNP_ID,
3836              ATT_PERMISSION_PRIMARY_SERVICE,
3837              ATT_PERMISSION_CHARACTERISTIC,
3838              ATT_PERMISSION_HDL_OTA_OTA_DATA_INIT,
3839              ATT_PERMISSION_HDL_OTA_OTA_DATA_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
3840              ATT_PERMISSION_HDL_OTA_OTA_DATA_DESCRIPTION,
3841              ATT_PERMISSION_CHARACTERISTIC,
3842              ATT_PERMISSION_HDL_OTA_OTA_CMD_CONTROL_POINT_INIT,
3843              ATT_PERMISSION_HDL_OTA_OTA_CMD_CP_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
3844              ATT_PERMISSION_HDL_OTA_OTA_CMD_USER_DESCRIPTION,
3845              ATT_PERMISSION_CHARACTERISTIC,
3846              ATT_PERMISSION_HDL_OTA_DATA_ERROR_STATUS_INIT,
3847              ATT_PERMISSION_HDL_OTA_DATA_ERROR_STATUS_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
3848              ATT_PERMISSION_HDL_OTA_DATA_ERROR_STATUS_USER_DESCRIPTION,
3849              ATT_PERMISSION_PRIMARY_SERVICE,
3850              ATT_PERMISSION_CHARACTERISTIC,
3851              ATT_PERMISSION_HDL_BAS_BATTERY_LEVEL_INIT,
3852              ATT_PERMISSION_HDL_BAS_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
3853          
3854          #ifdef _PROFILE_HOGP_
                  ATT_PERMISSION_PRIMARY_SERVICE,
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_HIDS_HID_INFORMATION,
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_HIDS_HID_CONTROL_POINT_INIT,
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_HIDS_REPORT_MAP,
              #ifdef _PROFILE_HOGP_KEYBOARD_
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_HIDS_REPORT_INIT,
                  ATT_PERMISSION_HDL_HIDS_REPORT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
                  ATT_PERMISSION_HDL_HIDS_REPORT_REPORT_REFERENCE,
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_HIDS_REPORT1_INIT,
                  ATT_PERMISSION_HDL_HIDS_REPORT1_REPORT_REFERENCE,
              #endif
              #ifdef _PROFILE_HOGP_MOUSE_
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_HIDS_REPORT_INIT,
                  ATT_PERMISSION_HDL_HIDS_REPORT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
                  ATT_PERMISSION_HDL_HIDS_REPORT_REPORT_REFERENCE,
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_HIDS_REPORT1_INIT,
                  ATT_PERMISSION_HDL_HIDS_REPORT1_REPORT_REFERENCE,
                  ATT_PERMISSION_HDL_HIDS_REPORT1_USER_DESCRIPTION,
              #endif
              #ifdef _PROFILE_HOGP_COMSUMER_
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_HIDS_REPORT_INIT,
                  ATT_PERMISSION_HDL_HIDS_REPORT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
                  ATT_PERMISSION_HDL_HIDS_REPORT_REPORT_REFERENCE,
              #endif
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_HIDS_PROTOCOL_MODE_INIT,
              #endif
3890          
3891          ////////////////////////TaoBao//////////////////////////////////
3892          #ifdef _PROFILE_TAOBAO_
                  ATT_PERMISSION_PRIMARY_SERVICE,
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_TAOBAO_DATW,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 64  

                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_TAOBAO_DATI_INIT,
                  ATT_PERMISSION_HDL_TAOBAO_DATI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
              #endif
3900          ////////////////////////TaoBao//////////////////////////////////
3901          
3902          ////////////////////////WeChat//////////////////////////////////
3903          #ifdef _PROFILE_WECHAT_
                  ATT_PERMISSION_PRIMARY_SERVICE,
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_WECHAT_DATW,
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_WECHAT_DATI_INIT,
                  ATT_PERMISSION_HDL_WECHAT_DATI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_WECHAT_DATR,
              /////////////////////Simple mode current pedometer measurement///
              #ifdef _PROFILE_WECHAT_SIMPLE_MODE_
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_WECHAT_SIMPLEMODE_DATRI_INIT,
                  ATT_PERMISSION_HDL_WECHAT_SIMPLEMODE_DATRI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
              /////////////////////Simple mode current pedometer measurement///
              /////////////////////Simple mode target//////////////////////////
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_WECHAT_SIMPLEMODE_DATRWI_INIT,
                  ATT_PERMISSION_HDL_WECHAT_SIMPLEMODE_DATRWI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
              #endif
              /////////////////////Simple mode target/////////////////////////
              #endif
3925          ////////////////////////WeChat//////////////////////////////////
3926          
3927          ////////////////////////6UUID//////////////////////////////////
3928          #ifdef _PROFILE_USER_DEFINE_01_
3929              ATT_PERMISSION_PRIMARY_SERVICE,
3930              ATT_PERMISSION_CHARACTERISTIC,
3931              ATT_PERMISSION_HDL_USER_DEFINE_01_DATAN01_INIT,
3932              ATT_PERMISSION_HDL_USER_DEFINE_01_DATAN01_CLIENT_CHARACT_CONFIG_INIT,
3933              ATT_PERMISSION_CHARACTERISTIC,
3934              ATT_PERMISSION_HDL_USER_DEFINE_01_DATAW01_INIT,
3935              ATT_PERMISSION_CHARACTERISTIC,
3936              ATT_PERMISSION_HDL_USER_DEFINE_01_DATAN02_INIT,
3937              ATT_PERMISSION_HDL_USER_DEFINE_01_DATAN02_CLIENT_CHARACT_CONFIG_INIT,
3938              ATT_PERMISSION_CHARACTERISTIC,
3939              ATT_PERMISSION_HDL_USER_DEFINE_01_DATAW02_INIT,
3940              ATT_PERMISSION_CHARACTERISTIC,
3941              ATT_PERMISSION_HDL_USER_DEFINE_01_DATAR01,
3942          #endif
3943          ////////////////////////6UUID//////////////////////////////////
3944          ////////////////////////GLS////////////////////////////////////
3945          #ifdef _PROFILE_GLS_
                  ATT_PERMISSION_PRIMARY_SERVICE,
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_GLS_GLUCOSE_MEASUREMENT_INIT,
                  ATT_PERMISSION_HDL_GLS_GLUCOSE_MEASUREMENT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_GLS_GLUCOSE_MEASUREMENT_CONTEXT_INIT,
                  ATT_PERMISSION_HDL_GLS_GLUCOSE_MEASUREMENT_CONTEXT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_GLS_GLUCOSE_FEATURE_INIT,
                  ATT_PERMISSION_CHARACTERISTIC,
                  ATT_PERMISSION_HDL_GLS_RECORD_ACCESS_CONTROL_POINT_INIT,
                  ATT_PERMISSION_HDL_GLS_RECORD_ACCESS_CONTROL_POINT_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
C51 COMPILER V9.52.0.0   SERVICEGEN                                                        05/30/2019 12:42:31 PAGE 65  

              #endif
3959          ////////////////////////GLS////////////////////////////////////
3960          };
3961          
3962          code uint8_t code *ATTRIBUTE_SERVER_BOND[SIZE_ATTRIBUTE_SERVER_BOND] =
3963          {
3964              ATT_HDL_BAS_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
3965          #ifdef _PROFILE_HOGP_
              #ifdef _PROFILE_HOGP_COMSUMER_
                  ATT_HDL_HIDS_REPORT_CSI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
              #endif
              #ifdef _PROFILE_HOGP_MOUSE_
                  ATT_HDL_HIDS_REPORT_MSI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
                  ATT_HDL_HIDS_REPORT_MSF_INIT,
              #endif
              #ifdef _PROFILE_HOGP_KEYBOARD_
                  ATT_HDL_HIDS_REPORT_KBI_CLIENT_CHARACTERISTIC_CONFIGURATION_INIT,
                  ATT_HDL_HIDS_REPORT_KBO_INIT,
              #endif
              #endif
3978          };
3979          
3980          code uint8_t *ATTRIBUTE_SERVER_BOND_PARAM[SIZE_ATTRIBUTE_SERVER_BOND] =
3981          {
3982              att_HDL_BAS_CLIENT_CHARACTERISTIC_CONFIGURATION,
3983          #ifdef _PROFILE_HOGP_
              #ifdef _PROFILE_HOGP_COMSUMER_
                  att_HDL_HIDS_REPORT_CSI_CLIENT_CHARACTERISTIC_CONFIGURATION,
              #endif
              #ifdef _PROFILE_HOGP_MOUSE_
                  att_HDL_HIDS_REPORT_MSI_CLIENT_CHARACTERISTIC_CONFIGURATION,
                  att_HDL_HIDS_REPORT_MSF,
              #endif
              #ifdef _PROFILE_HOGP_KEYBOARD_
                  att_HDL_HIDS_REPORT_KBI_CLIENT_CHARACTERISTIC_CONFIGURATION,
                  att_HDL_HIDS_REPORT_KBO,
              #endif
              #endif
3996          };


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   1398    ----
   XDATA SIZE       =    149    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
